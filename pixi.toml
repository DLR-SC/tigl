[workspace]
authors = ["Jan Kleinert <jan.kleinert@dlr.de>"]
channels = ["dlr-sc", "dlr-sc/label/tigl-dev", "conda-forge"]
name = "tigl-bld"
platforms = ["win-64", "linux-64", "osx-64"]
version = "3.4.1"
channel-priority = "disabled"

[feature.base.dependencies]
# Base dependencies for all builds
tixi3 = "3.3.1.*"
qt = { version = "5.15.15.*", channel = "conda-forge" }
python = "*"
matlab-libs = "*"
ninja = ">=1.10.0"
doxygen = "1.8.15.*"

[feature.opencascade.dependencies]
opencascade = "7.6.2.*"
freeimageplus = "*"

[feature.python-internal.dependencies]
swig = ">=3.0.11,<4.1"
pythonocc-core = "7.6.2.*"
setuptools = "*"
# these are optional, but needed for some of the python examples:
numpy = "*"
matplotlib = "*"
pyqt = ">=5.15.11,<6"

[feature.opencascade-static.dependencies]
opencascade-static = "7.6.2.*"
freetype-static = "*"
freeimageplus-static = "*"
tbb-devel = "2019.5.*"
tbb = "2019.5.*"

[target.linux-64.dependencies]
libgl-devel = "*"
libegl-devel = "*"
libopengl-devel = "*"

[target.win-64.dependencies]
brotlipy = "*"

[feature.coverage.dependencies]
lcov = "*"
gcovr = "*"

[target.linux-64.activation.env]
# this is needed to correctly set the RPATH of tiglcreator
LD_LIBRARY_PATH = "$CONDA_PREFIX/lib:$LD_LIBRARY_PATH"

[target.osx-64.activation.env]
# this is needed to correctly find freeimage and freetype
CMAKE_PREFIX_PATH = "$CONDA_PREFIX"

[target.win-64.activation.env]
# this is needed to correctly find freeimage and freetype
CMAKE_PREFIX_PATH = "%CONDA_PREFIX%/Library"

[tasks]
# depends-on omitted to avoid rebuild in CI
configure = { cmd = [
    "cmake", 
    "-G", "Ninja", 
    "-S", ".", 
    "-B", "build", 
    "-D", "CMAKE_INSTALL_PREFIX=build/install", 
    "-D", "CMAKE_BUILD_TYPE={{ config }}",
    "-D", "TIGL_NIGHTLY={{ nightly }}",
    "-D", "TIGL_CONCAT_GENERATED_FILES={{ nightly }}",
    "-D", "TIGL_BUILD_TESTS=ON",
    "-D", "TIGL_BINDINGS_PYTHON_INTERNAL=OFF",
    "-D", "TIGL_BINDINGS_PYTHON=ON",
    "-D", "TIGL_BINDINGS_MATLAB=ON",
    "-D", "TIGL_CREATOR=ON",
    "-D", "OCE_STATIC_LIBS=OFF",
], args = [
        { "arg" = "config", "default"="Release"},
        { "arg" = "nightly", "default"="ON"},
]}
generate = { cmd = """
    git submodule update --init --recursive
    && cd thirdparty/cpacs_gen
    && cmake -GNinja -S. -Bbuild -DTIGL_PATH=../.. 
    && cmake --build build --target generate
"""}
build = { cmd = "cmake --build . {{ extra_args }}", cwd = "build", args= [ { "arg" = "extra_args", "default" = "-j"}]}
install = { cmd = "cmake --build . --target install {{ extra_args }}", cwd = "build", args= [ { "arg" = "extra_args", "default" = "-j"}] }
unittests = { cmd = "./TiGL-unittests", cwd = "build/tests/unittests" }
integrationtests = { cmd = "./TiGL-integrationtests", cwd = "build/tests/integrationtests"}
tests = [ {task = "unittests"}, {task = "integrationtests"} ]
tiglcreator = { cmd = "./tiglcreator", cwd = "build/install/bin"}

# The environments define some common build configurations for TiGL or configurations used in CI
[environments]
# default is the default build configuration
"default" = ["base","opencascade"]
# coverage feature builds in debug mode and runs the tests with coverage flags enabled
"coverage" = ["base", "coverage", "opencascade"]
# occt-static feature builds with static OpenCASCADE libraries
"occt-static" = ["base", "opencascade-static"]
# python-internal feature builds the internal python bindings of the C++ core using swig
"python-internal" = ["base", "python-internal"]

[feature.coverage.tasks]
# The coverage feature builds in debug mode and runs the tests with coverage flags enabled
configure = { cmd = [
    "cmake", 
    "-G", "Unix Makefiles", # need /fast target to avoid recompilation of all files when using ninja
    "-S", ".", 
    "-B", "build", 
    "-D", "CMAKE_INSTALL_PREFIX=build/install", 
    "-D", "CMAKE_BUILD_TYPE={{ config }}",
    "-D", "TIGL_NIGHTLY={{ nightly }}",
    "-D", "TIGL_CONCAT_GENERATED_FILES={{ nightly }}",
    "-D", "TIGL_BUILD_TESTS=ON",
    "-D", "TIGL_ENABLE_COVERAGE=ON",
    "-D", "TIGL_BINDINGS_PYTHON_INTERNAL=OFF",
    "-D", "TIGL_BINDINGS_PYTHON=ON",
    "-D", "TIGL_BINDINGS_MATLAB=ON",
    "-D", "TIGL_CREATOR=OFF",
    "-D", "OCE_STATIC_LIBS=ON",
], args = [
        { "arg" = "config", "default"="Debug"},
        { "arg" = "nightly", "default"="ON"},
]}
unittests = { cmd = "cmake --build build --target coverage-unittests/fast"}
integrationtests = { cmd = "cmake --build build --target coverage-integrationtests/fast"}

[feature.opencascade-static.tasks]
configure = { cmd = [
    "cmake", 
    "-G", "Ninja", 
    "-S", ".", 
    "-B", "build", 
    "-D", "CMAKE_INSTALL_PREFIX=build/install", 
    "-D", "CMAKE_BUILD_TYPE={{ config }}",
    "-D", "TIGL_NIGHTLY={{ nightly }}",
    "-D", "TIGL_CONCAT_GENERATED_FILES={{ nightly }}",
    "-D", "TIGL_BUILD_TESTS=ON",
    "-D", "TIGL_BINDINGS_PYTHON_INTERNAL=OFF",
    "-D", "TIGL_BINDINGS_PYTHON=ON",
    "-D", "TIGL_BINDINGS_MATLAB=ON",
    "-D", "TIGL_CREATOR=ON",
    "-D", "OCE_STATIC_LIBS=ON",
], args = [
        { "arg" = "config", "default"="Release"},
        { "arg" = "nightly", "default"="ON"},
]}

[feature.python-internal.tasks]
configure = { cmd = [
    "cmake", 
    "-G", "Ninja", 
    "-S", ".", 
    "-B", "build", 
    "-D", "CMAKE_INSTALL_PREFIX=$CONDA_PREFIX", 
    "-D", "CMAKE_BUILD_TYPE={{ config }}",
    "-D", "TIGL_NIGHTLY={{ nightly }}",
    "-D", "TIGL_CONCAT_GENERATED_FILES={{ nightly }}",
    "-D", "TIGL_BUILD_TESTS=ON",
    "-D", "TIGL_BINDINGS_PYTHON_INTERNAL=ON",
    "-D", "Python3_FIND_STRATEGY=LOCATION",
    "-D", "Python3_FIND_FRAMEWORK=NEVER",
    "-D", "TIGL_BINDINGS_PYTHON=ON",
    "-D", "TIGL_BINDINGS_MATLAB=OFF",
    "-D", "OCE_STATIC_LIBS=OFF",
], args = [
        { "arg" = "config", "default"="Release"},
        { "arg" = "nightly", "default"="OFF"},
]}
