// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSLeadingEdgeHollow.h"
#include "CPACSLeadingEdgeShape.h"
#include "CPACSContourReference.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSControlSurfaceOuterShapeTrailingEdge
        
        // generated from /xsd:schema/xsd:complexType[171]
        class CPACSControlSurfaceBorderTrailingEdge
        {
        public:
            TIGL_EXPORT CPACSControlSurfaceBorderTrailingEdge();
            TIGL_EXPORT virtual ~CPACSControlSurfaceBorderTrailingEdge();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const double& GetEtaLE() const;
            TIGL_EXPORT void SetEtaLE(const double& value);
            
            TIGL_EXPORT bool HasEtaTE() const;
            TIGL_EXPORT const double& GetEtaTE() const;
            TIGL_EXPORT void SetEtaTE(const double& value);
            
            TIGL_EXPORT const double& GetXsiLE() const;
            TIGL_EXPORT void SetXsiLE(const double& value);
            
            TIGL_EXPORT bool HasInnerShape() const;
            TIGL_EXPORT const CPACSLeadingEdgeHollow& GetInnerShape() const;
            TIGL_EXPORT CPACSLeadingEdgeHollow& GetInnerShape();
            
            TIGL_EXPORT bool HasLeadingEdgeShape() const;
            TIGL_EXPORT const CPACSLeadingEdgeShape& GetLeadingEdgeShape() const;
            TIGL_EXPORT CPACSLeadingEdgeShape& GetLeadingEdgeShape();
            
            TIGL_EXPORT bool HasAirfoil() const;
            TIGL_EXPORT const CPACSContourReference& GetAirfoil() const;
            TIGL_EXPORT CPACSContourReference& GetAirfoil();
            
        protected:
            double                                  m_etaLE;
            boost::optional<double>                 m_etaTE;
            double                                  m_xsiLE;
            boost::optional<CPACSLeadingEdgeHollow> m_innerShape;
            boost::optional<CPACSLeadingEdgeShape>  m_leadingEdgeShape;
            boost::optional<CPACSContourReference>  m_airfoil;
            
        private:
            #ifdef HAVE_CPP11
            CPACSControlSurfaceBorderTrailingEdge(const CPACSControlSurfaceBorderTrailingEdge&) = delete;
            CPACSControlSurfaceBorderTrailingEdge& operator=(const CPACSControlSurfaceBorderTrailingEdge&) = delete;
            
            CPACSControlSurfaceBorderTrailingEdge(CPACSControlSurfaceBorderTrailingEdge&&) = delete;
            CPACSControlSurfaceBorderTrailingEdge& operator=(CPACSControlSurfaceBorderTrailingEdge&&) = delete;
            #else
            CPACSControlSurfaceBorderTrailingEdge(const CPACSControlSurfaceBorderTrailingEdge&);
            CPACSControlSurfaceBorderTrailingEdge& operator=(const CPACSControlSurfaceBorderTrailingEdge&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSControlSurfaceBorderTrailingEdge = generated::CPACSControlSurfaceBorderTrailingEdge;
    #else
    typedef generated::CPACSControlSurfaceBorderTrailingEdge CCPACSControlSurfaceBorderTrailingEdge;
    #endif
}
