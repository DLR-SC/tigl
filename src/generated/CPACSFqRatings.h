// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include "tigl_internal.h"
#include "CPACSFqShortPeriod.h"
#include "CPACSFqRolosc.h"
#include "CPACSFqEiglat.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSFqCase
        
        // generated from /xsd:schema/xsd:complexType[346]
        class CPACSFqRatings
        {
        public:
            TIGL_EXPORT CPACSFqRatings();
            TIGL_EXPORT virtual ~CPACSFqRatings();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const std::string& GetPhugoid() const;
            TIGL_EXPORT void SetPhugoid(const std::string& value);
            
            TIGL_EXPORT const std::string& GetCStar() const;
            TIGL_EXPORT void SetCStar(const std::string& value);
            
            TIGL_EXPORT const CPACSFqShortPeriod& GetShortPeriod() const;
            TIGL_EXPORT CPACSFqShortPeriod& GetShortPeriod();
            
            TIGL_EXPORT const CPACSFqRolosc& GetRolosc() const;
            TIGL_EXPORT CPACSFqRolosc& GetRolosc();
            
            TIGL_EXPORT const CPACSFqEiglat& GetEiglat() const;
            TIGL_EXPORT CPACSFqEiglat& GetEiglat();
            
            TIGL_EXPORT const std::string& GetTreff() const;
            TIGL_EXPORT void SetTreff(const std::string& value);
            
            TIGL_EXPORT const std::string& GetRollPerf() const;
            TIGL_EXPORT void SetRollPerf(const std::string& value);
            
        protected:
            std::string        m_phugoid;
            std::string        m_cStar;
            CPACSFqShortPeriod m_shortPeriod;
            CPACSFqRolosc      m_rolosc;
            CPACSFqEiglat      m_eiglat;
            std::string        m_treff;
            std::string        m_rollPerf;
            
        private:
            #ifdef HAVE_CPP11
            CPACSFqRatings(const CPACSFqRatings&) = delete;
            CPACSFqRatings& operator=(const CPACSFqRatings&) = delete;
            
            CPACSFqRatings(CPACSFqRatings&&) = delete;
            CPACSFqRatings& operator=(CPACSFqRatings&&) = delete;
            #else
            CPACSFqRatings(const CPACSFqRatings&);
            CPACSFqRatings& operator=(const CPACSFqRatings&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSFqRatings = generated::CPACSFqRatings;
    #else
    typedef generated::CPACSFqRatings CCPACSFqRatings;
    #endif
}
