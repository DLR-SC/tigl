// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSLeadingEdgeShape.h"
#include "CPACSContourReference.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSControlSurfaceOuterShapeSpoiler
        
        // generated from /xsd:schema/xsd:complexType[170]
        class CPACSControlSurfaceBorderSpoiler
        {
        public:
            TIGL_EXPORT CPACSControlSurfaceBorderSpoiler();
            TIGL_EXPORT virtual ~CPACSControlSurfaceBorderSpoiler();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const double& GetEtaLE() const;
            TIGL_EXPORT void SetEtaLE(const double& value);
            
            TIGL_EXPORT bool HasEtaTE() const;
            TIGL_EXPORT const double& GetEtaTE() const;
            TIGL_EXPORT void SetEtaTE(const double& value);
            
            TIGL_EXPORT const double& GetXsiLE() const;
            TIGL_EXPORT void SetXsiLE(const double& value);
            
            TIGL_EXPORT const double& GetXsiTE() const;
            TIGL_EXPORT void SetXsiTE(const double& value);
            
            TIGL_EXPORT bool HasRelHeightLE_choice1() const;
            TIGL_EXPORT const double& GetRelHeightLE_choice1() const;
            TIGL_EXPORT void SetRelHeightLE_choice1(const double& value);
            
            TIGL_EXPORT bool HasLeadingEdgeShape_choice2() const;
            TIGL_EXPORT const CPACSLeadingEdgeShape& GetLeadingEdgeShape_choice2() const;
            TIGL_EXPORT CPACSLeadingEdgeShape& GetLeadingEdgeShape_choice2();
            
            TIGL_EXPORT bool HasAirfoil_choice3() const;
            TIGL_EXPORT const CPACSContourReference& GetAirfoil_choice3() const;
            TIGL_EXPORT CPACSContourReference& GetAirfoil_choice3();
            
        protected:
            double                                 m_etaLE;
            boost::optional<double>                m_etaTE;
            double                                 m_xsiLE;
            double                                 m_xsiTE;
            boost::optional<double>                m_relHeightLE_choice1;
            boost::optional<CPACSLeadingEdgeShape> m_leadingEdgeShape_choice2;
            boost::optional<CPACSContourReference> m_airfoil_choice3;
            
        private:
            #ifdef HAVE_CPP11
            CPACSControlSurfaceBorderSpoiler(const CPACSControlSurfaceBorderSpoiler&) = delete;
            CPACSControlSurfaceBorderSpoiler& operator=(const CPACSControlSurfaceBorderSpoiler&) = delete;
            
            CPACSControlSurfaceBorderSpoiler(CPACSControlSurfaceBorderSpoiler&&) = delete;
            CPACSControlSurfaceBorderSpoiler& operator=(CPACSControlSurfaceBorderSpoiler&&) = delete;
            #else
            CPACSControlSurfaceBorderSpoiler(const CPACSControlSurfaceBorderSpoiler&);
            CPACSControlSurfaceBorderSpoiler& operator=(const CPACSControlSurfaceBorderSpoiler&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSControlSurfaceBorderSpoiler = generated::CPACSControlSurfaceBorderSpoiler;
    #else
    typedef generated::CPACSControlSurfaceBorderSpoiler CCPACSControlSurfaceBorderSpoiler;
    #endif
}
