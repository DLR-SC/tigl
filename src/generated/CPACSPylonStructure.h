// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSPylonBox.h"
#include "CPACSPylonShell.h"
#include "CPACSPylonStruts.h"
#include "CPACSPylonPins.h"
#include "CPACSPylonShackles.h"
#include "CPACSPylonAttachments.h"
#include "CPACSPylonAttachments.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSEnginePylon
        
        // generated from /xsd:schema/xsd:complexType[720]
        class CPACSPylonStructure
        {
        public:
            TIGL_EXPORT CPACSPylonStructure();
            TIGL_EXPORT virtual ~CPACSPylonStructure();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT bool HasPylonBox() const;
            TIGL_EXPORT const CPACSPylonBox& GetPylonBox() const;
            TIGL_EXPORT CPACSPylonBox& GetPylonBox();
            
            TIGL_EXPORT bool HasFrontPyramid() const;
            TIGL_EXPORT const CPACSPylonShell& GetFrontPyramid() const;
            TIGL_EXPORT CPACSPylonShell& GetFrontPyramid();
            
            TIGL_EXPORT bool HasStruts() const;
            TIGL_EXPORT const CPACSPylonStruts& GetStruts() const;
            TIGL_EXPORT CPACSPylonStruts& GetStruts();
            
            TIGL_EXPORT bool HasPins() const;
            TIGL_EXPORT const CPACSPylonPins& GetPins() const;
            TIGL_EXPORT CPACSPylonPins& GetPins();
            
            TIGL_EXPORT bool HasShackles() const;
            TIGL_EXPORT const CPACSPylonShackles& GetShackles() const;
            TIGL_EXPORT CPACSPylonShackles& GetShackles();
            
            TIGL_EXPORT bool HasWingAttachments() const;
            TIGL_EXPORT const CPACSPylonAttachments& GetWingAttachments() const;
            TIGL_EXPORT CPACSPylonAttachments& GetWingAttachments();
            
            TIGL_EXPORT bool HasFuselageAttachments() const;
            TIGL_EXPORT const CPACSPylonAttachments& GetFuselageAttachments() const;
            TIGL_EXPORT CPACSPylonAttachments& GetFuselageAttachments();
            
        protected:
            boost::optional<CPACSPylonBox>         m_pylonBox;
            boost::optional<CPACSPylonShell>       m_frontPyramid;
            boost::optional<CPACSPylonStruts>      m_struts;
            boost::optional<CPACSPylonPins>        m_pins;
            boost::optional<CPACSPylonShackles>    m_shackles;
            boost::optional<CPACSPylonAttachments> m_wingAttachments;
            boost::optional<CPACSPylonAttachments> m_fuselageAttachments;
            
        private:
            #ifdef HAVE_CPP11
            CPACSPylonStructure(const CPACSPylonStructure&) = delete;
            CPACSPylonStructure& operator=(const CPACSPylonStructure&) = delete;
            
            CPACSPylonStructure(CPACSPylonStructure&&) = delete;
            CPACSPylonStructure& operator=(CPACSPylonStructure&&) = delete;
            #else
            CPACSPylonStructure(const CPACSPylonStructure&);
            CPACSPylonStructure& operator=(const CPACSPylonStructure&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSPylonStructure = generated::CPACSPylonStructure;
    #else
    typedef generated::CPACSPylonStructure CCPACSPylonStructure;
    #endif
}
