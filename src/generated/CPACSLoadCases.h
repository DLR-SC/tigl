// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSCrashLoadCases.h"
#include "CPACSFlightLoadCases.h"
#include "CPACSGroundLoadCases.h"
#include "CPACSAeroDataSetsForLoads.h"
#include "CPACSLoadsEnvelope.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSLoadAnalysis
        
        // generated from /xsd:schema/xsd:complexType[499]
        class CPACSLoadCases
        {
        public:
            TIGL_EXPORT CPACSLoadCases();
            TIGL_EXPORT virtual ~CPACSLoadCases();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT bool HasCrashLoadCases() const;
            TIGL_EXPORT const CPACSCrashLoadCases& GetCrashLoadCases() const;
            TIGL_EXPORT CPACSCrashLoadCases& GetCrashLoadCases();
            
            TIGL_EXPORT bool HasFlightLoadCases() const;
            TIGL_EXPORT const CPACSFlightLoadCases& GetFlightLoadCases() const;
            TIGL_EXPORT CPACSFlightLoadCases& GetFlightLoadCases();
            
            TIGL_EXPORT bool HasGroundLoadCases() const;
            TIGL_EXPORT const CPACSGroundLoadCases& GetGroundLoadCases() const;
            TIGL_EXPORT CPACSGroundLoadCases& GetGroundLoadCases();
            
            TIGL_EXPORT bool HasAeroDataSetsForLoads() const;
            TIGL_EXPORT const CPACSAeroDataSetsForLoads& GetAeroDataSetsForLoads() const;
            TIGL_EXPORT CPACSAeroDataSetsForLoads& GetAeroDataSetsForLoads();
            
            TIGL_EXPORT bool HasLoadsEnvelope() const;
            TIGL_EXPORT const CPACSLoadsEnvelope& GetLoadsEnvelope() const;
            TIGL_EXPORT CPACSLoadsEnvelope& GetLoadsEnvelope();
            
        protected:
            boost::optional<CPACSCrashLoadCases>       m_crashLoadCases;
            boost::optional<CPACSFlightLoadCases>      m_flightLoadCases;
            boost::optional<CPACSGroundLoadCases>      m_groundLoadCases;
            boost::optional<CPACSAeroDataSetsForLoads> m_aeroDataSetsForLoads;
            boost::optional<CPACSLoadsEnvelope>        m_loadsEnvelope;
            
        private:
            #ifdef HAVE_CPP11
            CPACSLoadCases(const CPACSLoadCases&) = delete;
            CPACSLoadCases& operator=(const CPACSLoadCases&) = delete;
            
            CPACSLoadCases(CPACSLoadCases&&) = delete;
            CPACSLoadCases& operator=(CPACSLoadCases&&) = delete;
            #else
            CPACSLoadCases(const CPACSLoadCases&);
            CPACSLoadCases& operator=(const CPACSLoadCases&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSLoadCases = generated::CPACSLoadCases;
    #else
    typedef generated::CPACSLoadCases CCPACSLoadCases;
    #endif
}
