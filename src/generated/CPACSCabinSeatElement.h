// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSCabinSeatElement_type.h"
#include <CCPACSStringVector.h>

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSCabinSeatElements
        
        // generated from /xsd:schema/xsd:complexType[108]
        class CPACSCabinSeatElement
        {
        public:
            TIGL_EXPORT CPACSCabinSeatElement();
            TIGL_EXPORT virtual ~CPACSCabinSeatElement();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const std::string& GetUID() const;
            TIGL_EXPORT void SetUID(const std::string& value);
            
            TIGL_EXPORT const std::string& GetName() const;
            TIGL_EXPORT void SetName(const std::string& value);
            
            TIGL_EXPORT bool HasDescription() const;
            TIGL_EXPORT const std::string& GetDescription() const;
            TIGL_EXPORT void SetDescription(const std::string& value);
            
            TIGL_EXPORT const int& GetNSeats() const;
            TIGL_EXPORT void SetNSeats(const int& value);
            
            TIGL_EXPORT const CPACSCabinSeatElement_type& GetType() const;
            TIGL_EXPORT CPACSCabinSeatElement_type& GetType();
            
            TIGL_EXPORT const double& GetX() const;
            TIGL_EXPORT void SetX(const double& value);
            
            TIGL_EXPORT const double& GetY() const;
            TIGL_EXPORT void SetY(const double& value);
            
            TIGL_EXPORT const CCPACSStringVector& GetDySeats() const;
            TIGL_EXPORT CCPACSStringVector& GetDySeats();
            
            TIGL_EXPORT const double& GetLength() const;
            TIGL_EXPORT void SetLength(const double& value);
            
            TIGL_EXPORT const double& GetWidth() const;
            TIGL_EXPORT void SetWidth(const double& value);
            
            TIGL_EXPORT const double& GetHeight() const;
            TIGL_EXPORT void SetHeight(const double& value);
            
            TIGL_EXPORT const std::string& GetSeatModuleElementUID() const;
            TIGL_EXPORT void SetSeatModuleElementUID(const std::string& value);
            
            TIGL_EXPORT const std::string& GetLongFloorBeam1UID() const;
            TIGL_EXPORT void SetLongFloorBeam1UID(const std::string& value);
            
            TIGL_EXPORT const std::string& GetLongFloorBeam2UID() const;
            TIGL_EXPORT void SetLongFloorBeam2UID(const std::string& value);
            
        protected:
            std::string                  m_uID;
            std::string                  m_name;
            boost::optional<std::string> m_description;
            int                          m_nSeats;
            CPACSCabinSeatElement_type   m_type;
            double                       m_x;
            double                       m_y;
            CCPACSStringVector           m_dySeats;
            double                       m_length;
            double                       m_width;
            double                       m_height;
            std::string                  m_seatModuleElementUID;
            std::string                  m_longFloorBeam1UID;
            std::string                  m_longFloorBeam2UID;
            
        private:
            #ifdef HAVE_CPP11
            CPACSCabinSeatElement(const CPACSCabinSeatElement&) = delete;
            CPACSCabinSeatElement& operator=(const CPACSCabinSeatElement&) = delete;
            
            CPACSCabinSeatElement(CPACSCabinSeatElement&&) = delete;
            CPACSCabinSeatElement& operator=(CPACSCabinSeatElement&&) = delete;
            #else
            CPACSCabinSeatElement(const CPACSCabinSeatElement&);
            CPACSCabinSeatElement& operator=(const CPACSCabinSeatElement&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSCabinSeatElement = generated::CPACSCabinSeatElement;
    #else
    typedef generated::CPACSCabinSeatElement CCPACSCabinSeatElement;
    #endif
}
