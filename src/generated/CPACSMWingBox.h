// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSGenericMass.h"
#include "CPACSMSkins.h"
#include "CPACSMSpars.h"
#include "CPACSMRibs.h"
#include "CPACSMFixedLeadingEdge.h"
#include "CPACSMFixedTrailingEdge.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSMComponentSegment
        
        // generated from /xsd:schema/xsd:complexType[609]
        class CPACSMWingBox
        {
        public:
            TIGL_EXPORT CPACSMWingBox();
            TIGL_EXPORT virtual ~CPACSMWingBox();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const CPACSGenericMass& GetMassDescription() const;
            TIGL_EXPORT CPACSGenericMass& GetMassDescription();
            
            TIGL_EXPORT bool HasMSkins() const;
            TIGL_EXPORT const CPACSMSkins& GetMSkins() const;
            TIGL_EXPORT CPACSMSkins& GetMSkins();
            
            TIGL_EXPORT bool HasMSpars() const;
            TIGL_EXPORT const CPACSMSpars& GetMSpars() const;
            TIGL_EXPORT CPACSMSpars& GetMSpars();
            
            TIGL_EXPORT bool HasMRibs() const;
            TIGL_EXPORT const CPACSMRibs& GetMRibs() const;
            TIGL_EXPORT CPACSMRibs& GetMRibs();
            
            TIGL_EXPORT bool HasMFixedLeadingEdge() const;
            TIGL_EXPORT const CPACSMFixedLeadingEdge& GetMFixedLeadingEdge() const;
            TIGL_EXPORT CPACSMFixedLeadingEdge& GetMFixedLeadingEdge();
            
            TIGL_EXPORT bool HasMFixedTrailingEdge() const;
            TIGL_EXPORT const CPACSMFixedTrailingEdge& GetMFixedTrailingEdge() const;
            TIGL_EXPORT CPACSMFixedTrailingEdge& GetMFixedTrailingEdge();
            
        protected:
            CPACSGenericMass                         m_massDescription;
            boost::optional<CPACSMSkins>             m_mSkins;
            boost::optional<CPACSMSpars>             m_mSpars;
            boost::optional<CPACSMRibs>              m_mRibs;
            boost::optional<CPACSMFixedLeadingEdge>  m_mFixedLeadingEdge;
            boost::optional<CPACSMFixedTrailingEdge> m_mFixedTrailingEdge;
            
        private:
            #ifdef HAVE_CPP11
            CPACSMWingBox(const CPACSMWingBox&) = delete;
            CPACSMWingBox& operator=(const CPACSMWingBox&) = delete;
            
            CPACSMWingBox(CPACSMWingBox&&) = delete;
            CPACSMWingBox& operator=(CPACSMWingBox&&) = delete;
            #else
            CPACSMWingBox(const CPACSMWingBox&);
            CPACSMWingBox& operator=(const CPACSMWingBox&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSMWingBox = generated::CPACSMWingBox;
    #else
    typedef generated::CPACSMWingBox CCPACSMWingBox;
    #endif
}
