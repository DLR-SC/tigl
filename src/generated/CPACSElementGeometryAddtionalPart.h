// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <boost/optional.hpp>
#include <boost/utility/in_place_factory.hpp>
#include <CCPACSTransformationSE3.h>
#include <string>
#include <tixi.h>
#include "CPACSCuboid.h"
#include "CPACSCylinder.h"
#include "CPACSEllipsoid.h"
#include "CPACSExternalGeometry.h"
#include "CPACSMultiSegmentShape.h"
#include "CreateIfNotExists.h"
#include "tigl_internal.h"

namespace tigl
{
class CTiglUIDManager;
class CTiglUIDObject;

namespace generated
{
    class CPACSElementGeometryAddtionalParts;

    // This class is used in:
    // CPACSElementGeometryAddtionalParts

    /// @brief Additional Part
    /// 
    /// 
    class CPACSElementGeometryAddtionalPart
    {
    public:
        TIGL_EXPORT CPACSElementGeometryAddtionalPart(CPACSElementGeometryAddtionalParts* parent, CTiglUIDManager* uidMgr);

        TIGL_EXPORT virtual ~CPACSElementGeometryAddtionalPart();

        TIGL_EXPORT CPACSElementGeometryAddtionalParts* GetParent();

        TIGL_EXPORT const CPACSElementGeometryAddtionalParts* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT CTiglUIDManager& GetUIDManager();
        TIGL_EXPORT const CTiglUIDManager& GetUIDManager() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT bool ValidateChoices() const;

        TIGL_EXPORT virtual const boost::optional<CPACSCuboid>& GetCuboid_choice1() const;
        TIGL_EXPORT virtual boost::optional<CPACSCuboid>& GetCuboid_choice1();

        TIGL_EXPORT virtual const boost::optional<CPACSCylinder>& GetCone_choice2() const;
        TIGL_EXPORT virtual boost::optional<CPACSCylinder>& GetCone_choice2();

        TIGL_EXPORT virtual const boost::optional<CPACSEllipsoid>& GetEllipsoid_choice3() const;
        TIGL_EXPORT virtual boost::optional<CPACSEllipsoid>& GetEllipsoid_choice3();

        TIGL_EXPORT virtual const boost::optional<CPACSMultiSegmentShape>& GetMultiSegmentShape_choice4() const;
        TIGL_EXPORT virtual boost::optional<CPACSMultiSegmentShape>& GetMultiSegmentShape_choice4();

        TIGL_EXPORT virtual const boost::optional<CPACSExternalGeometry>& GetExternal_choice5() const;
        TIGL_EXPORT virtual boost::optional<CPACSExternalGeometry>& GetExternal_choice5();

        TIGL_EXPORT virtual const CCPACSTransformationSE3& GetTransformation() const;
        TIGL_EXPORT virtual CCPACSTransformationSE3& GetTransformation();

        TIGL_EXPORT virtual CPACSCuboid& GetCuboid_choice1(CreateIfNotExistsTag);
        TIGL_EXPORT virtual void RemoveCuboid_choice1();

        TIGL_EXPORT virtual CPACSCylinder& GetCone_choice2(CreateIfNotExistsTag);
        TIGL_EXPORT virtual void RemoveCone_choice2();

        TIGL_EXPORT virtual CPACSEllipsoid& GetEllipsoid_choice3(CreateIfNotExistsTag);
        TIGL_EXPORT virtual void RemoveEllipsoid_choice3();

        TIGL_EXPORT virtual CPACSMultiSegmentShape& GetMultiSegmentShape_choice4(CreateIfNotExistsTag);
        TIGL_EXPORT virtual void RemoveMultiSegmentShape_choice4();

        TIGL_EXPORT virtual CPACSExternalGeometry& GetExternal_choice5(CreateIfNotExistsTag);
        TIGL_EXPORT virtual void RemoveExternal_choice5();

    protected:
        CPACSElementGeometryAddtionalParts* m_parent;

        CTiglUIDManager* m_uidMgr;

        boost::optional<CPACSCuboid>            m_cuboid_choice1;
        boost::optional<CPACSCylinder>          m_cone_choice2;
        boost::optional<CPACSEllipsoid>         m_ellipsoid_choice3;
        boost::optional<CPACSMultiSegmentShape> m_multiSegmentShape_choice4;
        boost::optional<CPACSExternalGeometry>  m_external_choice5;
        CCPACSTransformationSE3                 m_transformation;

    private:
        CPACSElementGeometryAddtionalPart(const CPACSElementGeometryAddtionalPart&) = delete;
        CPACSElementGeometryAddtionalPart& operator=(const CPACSElementGeometryAddtionalPart&) = delete;

        CPACSElementGeometryAddtionalPart(CPACSElementGeometryAddtionalPart&&) = delete;
        CPACSElementGeometryAddtionalPart& operator=(CPACSElementGeometryAddtionalPart&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSElementGeometryAddtionalPart = generated::CPACSElementGeometryAddtionalPart;
using CCPACSElementGeometryAddtionalParts = generated::CPACSElementGeometryAddtionalParts;
} // namespace tigl
