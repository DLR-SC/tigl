// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <string>
#include <tixi.h>
#include <vector>
#include "CTiglUIDObject.h"
#include "tigl_internal.h"
#include "UniquePtr.h"

namespace tigl
{
class CTiglUIDManager;

namespace generated
{
    class CPACSLandingGearExtensionFunctionStep;
    class CPACSLandingGearControlFunctions;

    // This class is used in:
    // CPACSLandingGearControlFunctions

    /// @brief Extension path
    /// 
    /// Describes the extension path of the landing gears via a list of steps.
    /// 
    class CPACSLandingGearExtensionFunction : public CTiglReqUIDObject
    {
    public:
        TIGL_EXPORT CPACSLandingGearExtensionFunction(CPACSLandingGearControlFunctions* parent, CTiglUIDManager* uidMgr);

        TIGL_EXPORT virtual ~CPACSLandingGearExtensionFunction();

        TIGL_EXPORT CPACSLandingGearControlFunctions* GetParent();

        TIGL_EXPORT const CPACSLandingGearControlFunctions* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT CTiglUIDManager& GetUIDManager();
        TIGL_EXPORT const CTiglUIDManager& GetUIDManager() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const std::string& GetUID() const;
        TIGL_EXPORT virtual void SetUID(const std::string& value);

        TIGL_EXPORT virtual const std::vector<std::unique_ptr<CPACSLandingGearExtensionFunctionStep>>& GetSteps() const;
        TIGL_EXPORT virtual std::vector<std::unique_ptr<CPACSLandingGearExtensionFunctionStep>>& GetSteps();

        TIGL_EXPORT virtual size_t GetStepCount() const;
        TIGL_EXPORT virtual size_t GetStepIndex(const std::string& UID) const;

        TIGL_EXPORT virtual const CPACSLandingGearExtensionFunctionStep& GetStep(size_t index) const;
        TIGL_EXPORT virtual CPACSLandingGearExtensionFunctionStep& GetStep(size_t index);

        TIGL_EXPORT virtual const CPACSLandingGearExtensionFunctionStep& GetStep(const std::string& UID) const;
        TIGL_EXPORT virtual CPACSLandingGearExtensionFunctionStep& GetStep(const std::string& UID);

        TIGL_EXPORT virtual CPACSLandingGearExtensionFunctionStep& AddStep();
        TIGL_EXPORT virtual void RemoveStep(CPACSLandingGearExtensionFunctionStep& ref);

    protected:
        CPACSLandingGearControlFunctions* m_parent;

        CTiglUIDManager* m_uidMgr;

        std::string                                                         m_uID;

        /// Step within the extension path
        std::vector<std::unique_ptr<CPACSLandingGearExtensionFunctionStep>> m_steps;

    private:
        CPACSLandingGearExtensionFunction(const CPACSLandingGearExtensionFunction&) = delete;
        CPACSLandingGearExtensionFunction& operator=(const CPACSLandingGearExtensionFunction&) = delete;

        CPACSLandingGearExtensionFunction(CPACSLandingGearExtensionFunction&&) = delete;
        CPACSLandingGearExtensionFunction& operator=(CPACSLandingGearExtensionFunction&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSLandingGearExtensionFunction = generated::CPACSLandingGearExtensionFunction;
using CCPACSLandingGearExtensionFunctionStep = generated::CPACSLandingGearExtensionFunctionStep;
using CCPACSLandingGearControlFunctions = generated::CPACSLandingGearControlFunctions;
} // namespace tigl
