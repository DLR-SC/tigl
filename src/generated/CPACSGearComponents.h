// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSStrut.h"
#include "CPACSPiston.h"
#include "CPACSStrutWithActuator.h"
#include "CPACSStrut.h"
#include "CPACSSideStruts.h"
#include "CPACSMainActuator.h"
#include "CPACSBogie.h"
#include "CPACSAxles.h"
#include "CPACSWheels.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSMainGear
        // CPACSNoseGear
        
        // generated from /xsd:schema/xsd:complexType[378]
        class CPACSGearComponents
        {
        public:
            TIGL_EXPORT CPACSGearComponents();
            TIGL_EXPORT virtual ~CPACSGearComponents();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const CPACSStrut& GetMainStrut() const;
            TIGL_EXPORT CPACSStrut& GetMainStrut();
            
            TIGL_EXPORT const CPACSPiston& GetPiston() const;
            TIGL_EXPORT CPACSPiston& GetPiston();
            
            TIGL_EXPORT const CPACSStrutWithActuator& GetDragStrut() const;
            TIGL_EXPORT CPACSStrutWithActuator& GetDragStrut();
            
            TIGL_EXPORT const CPACSStrut& GetPintleStrut() const;
            TIGL_EXPORT CPACSStrut& GetPintleStrut();
            
            TIGL_EXPORT const CPACSSideStruts& GetSideStruts() const;
            TIGL_EXPORT CPACSSideStruts& GetSideStruts();
            
            TIGL_EXPORT const CPACSMainActuator& GetMainActuator() const;
            TIGL_EXPORT CPACSMainActuator& GetMainActuator();
            
            TIGL_EXPORT bool HasBogie() const;
            TIGL_EXPORT const CPACSBogie& GetBogie() const;
            TIGL_EXPORT CPACSBogie& GetBogie();
            
            TIGL_EXPORT const CPACSAxles& GetAxles() const;
            TIGL_EXPORT CPACSAxles& GetAxles();
            
            TIGL_EXPORT const CPACSWheels& GetWheels() const;
            TIGL_EXPORT CPACSWheels& GetWheels();
            
        protected:
            CPACSStrut                  m_mainStrut;
            CPACSPiston                 m_piston;
            CPACSStrutWithActuator      m_dragStrut;
            CPACSStrut                  m_pintleStrut;
            CPACSSideStruts             m_sideStruts;
            CPACSMainActuator           m_mainActuator;
            boost::optional<CPACSBogie> m_bogie;
            CPACSAxles                  m_axles;
            CPACSWheels                 m_wheels;
            
        private:
            #ifdef HAVE_CPP11
            CPACSGearComponents(const CPACSGearComponents&) = delete;
            CPACSGearComponents& operator=(const CPACSGearComponents&) = delete;
            
            CPACSGearComponents(CPACSGearComponents&&) = delete;
            CPACSGearComponents& operator=(CPACSGearComponents&&) = delete;
            #else
            CPACSGearComponents(const CPACSGearComponents&);
            CPACSGearComponents& operator=(const CPACSGearComponents&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSGearComponents = generated::CPACSGearComponents;
    #else
    typedef generated::CPACSGearComponents CCPACSGearComponents;
    #endif
}
