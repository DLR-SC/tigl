// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <ctime>
#include "tigl_internal.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSUpdates
        
        // generated from /xsd:schema/xsd:complexType[857]
        class CPACSUpdate
        {
        public:
            TIGL_EXPORT CPACSUpdate();
            TIGL_EXPORT virtual ~CPACSUpdate();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const std::string& GetModification() const;
            TIGL_EXPORT void SetModification(const std::string& value);
            
            TIGL_EXPORT const std::string& GetCreator() const;
            TIGL_EXPORT void SetCreator(const std::string& value);
            
            TIGL_EXPORT const std::time_t& GetTimestamp() const;
            TIGL_EXPORT void SetTimestamp(const std::time_t& value);
            
            TIGL_EXPORT const std::string& GetVersion() const;
            TIGL_EXPORT void SetVersion(const std::string& value);
            
            TIGL_EXPORT const std::string& GetCpacsVersion() const;
            TIGL_EXPORT void SetCpacsVersion(const std::string& value);
            
        protected:
            std::string m_modification;
            std::string m_creator;
            std::time_t m_timestamp;
            std::string m_version;
            std::string m_cpacsVersion;
            
        private:
            #ifdef HAVE_CPP11
            CPACSUpdate(const CPACSUpdate&) = delete;
            CPACSUpdate& operator=(const CPACSUpdate&) = delete;
            
            CPACSUpdate(CPACSUpdate&&) = delete;
            CPACSUpdate& operator=(CPACSUpdate&&) = delete;
            #else
            CPACSUpdate(const CPACSUpdate&);
            CPACSUpdate& operator=(const CPACSUpdate&);
            #endif
        };
    }
    
    // Aliases in tigl namespace
    #ifdef HAVE_CPP11
    using CCPACSUpdate = generated::CPACSUpdate;
    #else
    typedef generated::CPACSUpdate CCPACSUpdate;
    #endif
}
