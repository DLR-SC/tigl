// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <ctime>
#include <string>
#include <tixi.h>
#include "tigl_internal.h"

namespace tigl
{
class CTiglUIDObject;

namespace generated
{
    class CPACSUpdates;

    // This class is used in:
    // CPACSUpdates

    // generated from /xsd:schema/xsd:complexType[904]
    /// @brief updateType
    /// 
    /// Update type, containing a datablock for each update of
    /// the CPACS dataset
    /// 
    class CPACSUpdate
    {
    public:
        TIGL_EXPORT CPACSUpdate(CPACSUpdates* parent);

        TIGL_EXPORT virtual ~CPACSUpdate();

        TIGL_EXPORT CPACSUpdates* GetParent();

        TIGL_EXPORT const CPACSUpdates* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const std::string& GetModification() const;
        TIGL_EXPORT virtual void SetModification(const std::string& value);

        TIGL_EXPORT virtual const std::string& GetCreator() const;
        TIGL_EXPORT virtual void SetCreator(const std::string& value);

        TIGL_EXPORT virtual const std::time_t& GetTimestamp() const;
        TIGL_EXPORT virtual void SetTimestamp(const std::time_t& value);

        TIGL_EXPORT virtual const std::string& GetVersion() const;
        TIGL_EXPORT virtual void SetVersion(const std::string& value);

        TIGL_EXPORT virtual const std::string& GetCpacsVersion() const;
        TIGL_EXPORT virtual void SetCpacsVersion(const std::string& value);

    protected:
        CPACSUpdates* m_parent;

        /// Description of Modification of CPACS data
        std::string m_modification;

        /// Creator of CPACS modification
        std::string m_creator;

        /// Timestamp of CPACS modification
        std::time_t m_timestamp;

        /// New version number of CPACS dataset after
        /// modification
        std::string m_version;

        /// CPACS version that the dataset is valid to
        std::string m_cpacsVersion;

    private:
        CPACSUpdate(const CPACSUpdate&) = delete;
        CPACSUpdate& operator=(const CPACSUpdate&) = delete;

        CPACSUpdate(CPACSUpdate&&) = delete;
        CPACSUpdate& operator=(CPACSUpdate&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSUpdate = generated::CPACSUpdate;
using CCPACSUpdates = generated::CPACSUpdates;
} // namespace tigl
