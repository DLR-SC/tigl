// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSSheetBasedStructuralElements.h"
#include "CPACSProfileBasedStructuralElements.h"
#include "CPACSPressureBulkheads.h"
#include "CPACSWindows.h"
#include "CPACSDoors.h"
#include "CPACSDoorSurroundStructuresAssembly.h"
#include "CPACSSeatModules.h"
#include "CPACSRivets.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSVehicles
        
        // generated from /xsd:schema/xsd:complexType[811]
        class CPACSStructuralElements
        {
        public:
            TIGL_EXPORT CPACSStructuralElements();
            TIGL_EXPORT virtual ~CPACSStructuralElements();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT bool HasSheetBasedStructuralElements() const;
            TIGL_EXPORT const CPACSSheetBasedStructuralElements& GetSheetBasedStructuralElements() const;
            TIGL_EXPORT CPACSSheetBasedStructuralElements& GetSheetBasedStructuralElements();
            
            TIGL_EXPORT bool HasProfileBasedStructuralElements() const;
            TIGL_EXPORT const CPACSProfileBasedStructuralElements& GetProfileBasedStructuralElements() const;
            TIGL_EXPORT CPACSProfileBasedStructuralElements& GetProfileBasedStructuralElements();
            
            TIGL_EXPORT bool HasPressureBulkheads() const;
            TIGL_EXPORT const CPACSPressureBulkheads& GetPressureBulkheads() const;
            TIGL_EXPORT CPACSPressureBulkheads& GetPressureBulkheads();
            
            TIGL_EXPORT bool HasWindows() const;
            TIGL_EXPORT const CPACSWindows& GetWindows() const;
            TIGL_EXPORT CPACSWindows& GetWindows();
            
            TIGL_EXPORT bool HasDoors() const;
            TIGL_EXPORT const CPACSDoors& GetDoors() const;
            TIGL_EXPORT CPACSDoors& GetDoors();
            
            TIGL_EXPORT bool HasDoorSurroundStructures() const;
            TIGL_EXPORT const CPACSDoorSurroundStructuresAssembly& GetDoorSurroundStructures() const;
            TIGL_EXPORT CPACSDoorSurroundStructuresAssembly& GetDoorSurroundStructures();
            
            TIGL_EXPORT bool HasSeatModules() const;
            TIGL_EXPORT const CPACSSeatModules& GetSeatModules() const;
            TIGL_EXPORT CPACSSeatModules& GetSeatModules();
            
            TIGL_EXPORT bool HasRivets() const;
            TIGL_EXPORT const CPACSRivets& GetRivets() const;
            TIGL_EXPORT CPACSRivets& GetRivets();
            
        protected:
            boost::optional<CPACSSheetBasedStructuralElements>   m_sheetBasedStructuralElements;
            boost::optional<CPACSProfileBasedStructuralElements> m_profileBasedStructuralElements;
            boost::optional<CPACSPressureBulkheads>              m_pressureBulkheads;
            boost::optional<CPACSWindows>                        m_windows;
            boost::optional<CPACSDoors>                          m_doors;
            boost::optional<CPACSDoorSurroundStructuresAssembly> m_doorSurroundStructures;
            boost::optional<CPACSSeatModules>                    m_seatModules;
            boost::optional<CPACSRivets>                         m_rivets;
            
        private:
            #ifdef HAVE_CPP11
            CPACSStructuralElements(const CPACSStructuralElements&) = delete;
            CPACSStructuralElements& operator=(const CPACSStructuralElements&) = delete;
            
            CPACSStructuralElements(CPACSStructuralElements&&) = delete;
            CPACSStructuralElements& operator=(CPACSStructuralElements&&) = delete;
            #else
            CPACSStructuralElements(const CPACSStructuralElements&);
            CPACSStructuralElements& operator=(const CPACSStructuralElements&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSStructuralElements = generated::CPACSStructuralElements;
    #else
    typedef generated::CPACSStructuralElements CCPACSStructuralElements;
    #endif
}
