// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSGenericCost.h"
#include "CPACSCostEquippedEngines.h"
#include "CPACSCostNacelles.h"
#include "CPACSCostBleedAirSystems.h"
#include "CPACSCostFuelSystems.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSRecurringCost
        
        // generated from /xsd:schema/xsd:complexType[217]
        class CPACSCostPowerUnits
        {
        public:
            TIGL_EXPORT CPACSCostPowerUnits();
            TIGL_EXPORT virtual ~CPACSCostPowerUnits();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const CPACSGenericCost& GetCostDescription() const;
            TIGL_EXPORT CPACSGenericCost& GetCostDescription();
            
            TIGL_EXPORT bool HasEquippedEngines() const;
            TIGL_EXPORT const CPACSCostEquippedEngines& GetEquippedEngines() const;
            TIGL_EXPORT CPACSCostEquippedEngines& GetEquippedEngines();
            
            TIGL_EXPORT bool HasNacelles() const;
            TIGL_EXPORT const CPACSCostNacelles& GetNacelles() const;
            TIGL_EXPORT CPACSCostNacelles& GetNacelles();
            
            TIGL_EXPORT bool HasBleedAirSystems() const;
            TIGL_EXPORT const CPACSCostBleedAirSystems& GetBleedAirSystems() const;
            TIGL_EXPORT CPACSCostBleedAirSystems& GetBleedAirSystems();
            
            TIGL_EXPORT bool HasFuelSystems() const;
            TIGL_EXPORT const CPACSCostFuelSystems& GetFuelSystems() const;
            TIGL_EXPORT CPACSCostFuelSystems& GetFuelSystems();
            
        protected:
            CPACSGenericCost                          m_costDescription;
            boost::optional<CPACSCostEquippedEngines> m_equippedEngines;
            boost::optional<CPACSCostNacelles>        m_nacelles;
            boost::optional<CPACSCostBleedAirSystems> m_bleedAirSystems;
            boost::optional<CPACSCostFuelSystems>     m_fuelSystems;
            
        private:
            #ifdef HAVE_CPP11
            CPACSCostPowerUnits(const CPACSCostPowerUnits&) = delete;
            CPACSCostPowerUnits& operator=(const CPACSCostPowerUnits&) = delete;
            
            CPACSCostPowerUnits(CPACSCostPowerUnits&&) = delete;
            CPACSCostPowerUnits& operator=(CPACSCostPowerUnits&&) = delete;
            #else
            CPACSCostPowerUnits(const CPACSCostPowerUnits&);
            CPACSCostPowerUnits& operator=(const CPACSCostPowerUnits&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSCostPowerUnits = generated::CPACSCostPowerUnits;
    #else
    typedef generated::CPACSCostPowerUnits CCPACSCostPowerUnits;
    #endif
}
