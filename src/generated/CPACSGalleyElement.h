// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <boost/optional.hpp>
#include <boost/utility/in_place_factory.hpp>
#include <string>
#include <tixi.h>
#include "CPACSDeckElementGeometry.h"
#include "CPACSDeckElementMass.h"
#include "CPACSPosExcl0IntBase.h"
#include "CreateIfNotExists.h"
#include "CTiglUIDObject.h"
#include "tigl_internal.h"

namespace tigl
{
class CTiglUIDManager;

namespace generated
{
    class CPACSGalleyElements;

    // This class is used in:
    // CPACSGalleyElements

    /// @brief Galley element
    /// 
    /// Galley element type, containing the base elements of the cabin
    /// 
    class CPACSGalleyElement : public CTiglReqUIDObject
    {
    public:
        TIGL_EXPORT CPACSGalleyElement(CPACSGalleyElements* parent, CTiglUIDManager* uidMgr);

        TIGL_EXPORT virtual ~CPACSGalleyElement();

        TIGL_EXPORT CPACSGalleyElements* GetParent();

        TIGL_EXPORT const CPACSGalleyElements* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT CTiglUIDManager& GetUIDManager();
        TIGL_EXPORT const CTiglUIDManager& GetUIDManager() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const std::string& GetUID() const;
        TIGL_EXPORT virtual void SetUID(const std::string& value);

        TIGL_EXPORT virtual const boost::optional<std::string>& GetDescription() const;
        TIGL_EXPORT virtual void SetDescription(const boost::optional<std::string>& value);

        TIGL_EXPORT virtual const CPACSDeckElementGeometry& GetGeometry() const;
        TIGL_EXPORT virtual CPACSDeckElementGeometry& GetGeometry();

        TIGL_EXPORT virtual const boost::optional<CPACSDeckElementMass>& GetMass() const;
        TIGL_EXPORT virtual boost::optional<CPACSDeckElementMass>& GetMass();

        TIGL_EXPORT virtual const boost::optional<CPACSPosExcl0IntBase>& GetNumberOfTrolleys() const;
        TIGL_EXPORT virtual boost::optional<CPACSPosExcl0IntBase>& GetNumberOfTrolleys();

        TIGL_EXPORT virtual CPACSDeckElementMass& GetMass(CreateIfNotExistsTag);
        TIGL_EXPORT virtual void RemoveMass();

        TIGL_EXPORT virtual CPACSPosExcl0IntBase& GetNumberOfTrolleys(CreateIfNotExistsTag);
        TIGL_EXPORT virtual void RemoveNumberOfTrolleys();

    protected:
        CPACSGalleyElements* m_parent;

        CTiglUIDManager* m_uidMgr;

        std::string                           m_uID;

        /// Description
        boost::optional<std::string>          m_description;

        CPACSDeckElementGeometry              m_geometry;

        boost::optional<CPACSDeckElementMass> m_mass;

        /// Number of trolleys
        boost::optional<CPACSPosExcl0IntBase> m_numberOfTrolleys;

    private:
        CPACSGalleyElement(const CPACSGalleyElement&) = delete;
        CPACSGalleyElement& operator=(const CPACSGalleyElement&) = delete;

        CPACSGalleyElement(CPACSGalleyElement&&) = delete;
        CPACSGalleyElement& operator=(CPACSGalleyElement&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSGalleyElement = generated::CPACSGalleyElement;
using CCPACSGalleyElements = generated::CPACSGalleyElements;
} // namespace tigl
