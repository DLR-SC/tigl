// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include "tigl_internal.h"
#include "CPACSStrut.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSAxles
        
        // generated from /xsd:schema/xsd:complexType[77]
        class CPACSAxle
        {
        public:
            TIGL_EXPORT CPACSAxle();
            TIGL_EXPORT virtual ~CPACSAxle();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const std::string& GetUID() const;
            TIGL_EXPORT void SetUID(const std::string& value);
            
            TIGL_EXPORT const CPACSStrut& GetShaft() const;
            TIGL_EXPORT CPACSStrut& GetShaft();
            
            TIGL_EXPORT const std::string& GetWheelUID() const;
            TIGL_EXPORT void SetWheelUID(const std::string& value);
            
            TIGL_EXPORT const int& GetNumberOfWheels() const;
            TIGL_EXPORT void SetNumberOfWheels(const int& value);
            
        protected:
            std::string m_uID;
            CPACSStrut  m_shaft;
            std::string m_wheelUID;
            int         m_numberOfWheels;
            
        private:
            #ifdef HAVE_CPP11
            CPACSAxle(const CPACSAxle&) = delete;
            CPACSAxle& operator=(const CPACSAxle&) = delete;
            
            CPACSAxle(CPACSAxle&&) = delete;
            CPACSAxle& operator=(CPACSAxle&&) = delete;
            #else
            CPACSAxle(const CPACSAxle&);
            CPACSAxle& operator=(const CPACSAxle&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSAxle = generated::CPACSAxle;
    #else
    typedef generated::CPACSAxle CCPACSAxle;
    #endif
}
