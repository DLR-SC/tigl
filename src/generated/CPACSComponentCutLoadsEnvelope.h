// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include "tigl_internal.h"
#include "CPACSSubLoad.h"
#include "CPACSSubLoad.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSCutLoadsEnvelope
        
        // generated from /xsd:schema/xsd:complexType[140]
        class CPACSComponentCutLoadsEnvelope
        {
        public:
            TIGL_EXPORT CPACSComponentCutLoadsEnvelope();
            TIGL_EXPORT virtual ~CPACSComponentCutLoadsEnvelope();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const std::string& GetParentUID() const;
            TIGL_EXPORT void SetParentUID(const std::string& value);
            
            TIGL_EXPORT const CPACSSubLoad& GetMax() const;
            TIGL_EXPORT CPACSSubLoad& GetMax();
            
            TIGL_EXPORT const CPACSSubLoad& GetMin() const;
            TIGL_EXPORT CPACSSubLoad& GetMin();
            
        protected:
            std::string  m_parentUID;
            CPACSSubLoad m_max;
            CPACSSubLoad m_min;
            
        private:
            #ifdef HAVE_CPP11
            CPACSComponentCutLoadsEnvelope(const CPACSComponentCutLoadsEnvelope&) = delete;
            CPACSComponentCutLoadsEnvelope& operator=(const CPACSComponentCutLoadsEnvelope&) = delete;
            
            CPACSComponentCutLoadsEnvelope(CPACSComponentCutLoadsEnvelope&&) = delete;
            CPACSComponentCutLoadsEnvelope& operator=(CPACSComponentCutLoadsEnvelope&&) = delete;
            #else
            CPACSComponentCutLoadsEnvelope(const CPACSComponentCutLoadsEnvelope&);
            CPACSComponentCutLoadsEnvelope& operator=(const CPACSComponentCutLoadsEnvelope&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSComponentCutLoadsEnvelope = generated::CPACSComponentCutLoadsEnvelope;
    #else
    typedef generated::CPACSComponentCutLoadsEnvelope CCPACSComponentCutLoadsEnvelope;
    #endif
}
