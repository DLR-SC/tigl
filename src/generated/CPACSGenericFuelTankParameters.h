// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <CCPACSMaterialDefinition.h>
#include <CCPACSTransformation.h>
#include <string>
#include <tixi.h>
#include "CPACSDomeType.h"
#include "tigl_internal.h"

namespace tigl
{
class CTiglUIDManager;
class CTiglUIDObject;

namespace generated
{
    class CPACSGenericFuelTank;

    // This class is used in:
    // CPACSGenericFuelTank

    /// @brief Global design parameters
    /// 
    /// 
    class CPACSGenericFuelTankParameters
    {
    public:
        TIGL_EXPORT CPACSGenericFuelTankParameters(CPACSGenericFuelTank* parent, CTiglUIDManager* uidMgr);

        TIGL_EXPORT virtual ~CPACSGenericFuelTankParameters();

        TIGL_EXPORT CPACSGenericFuelTank* GetParent();

        TIGL_EXPORT const CPACSGenericFuelTank* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT CTiglUIDManager& GetUIDManager();
        TIGL_EXPORT const CTiglUIDManager& GetUIDManager() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const CCPACSTransformation& GetTransformation() const;
        TIGL_EXPORT virtual CCPACSTransformation& GetTransformation();

        TIGL_EXPORT virtual const double& GetCylinderRadius() const;
        TIGL_EXPORT virtual void SetCylinderRadius(const double& value);

        TIGL_EXPORT virtual const double& GetCylinderLength() const;
        TIGL_EXPORT virtual void SetCylinderLength(const double& value);

        TIGL_EXPORT virtual const CPACSDomeType& GetDomeType() const;
        TIGL_EXPORT virtual CPACSDomeType& GetDomeType();

        TIGL_EXPORT virtual const CCPACSMaterialDefinition& GetMaterial() const;
        TIGL_EXPORT virtual CCPACSMaterialDefinition& GetMaterial();

    protected:
        CPACSGenericFuelTank* m_parent;

        CTiglUIDManager* m_uidMgr;

        CCPACSTransformation     m_transformation;

        /// Inner radius of the cylinder
        double                   m_cylinderRadius;

        /// Inner length of the cylinder
        double                   m_cylinderLength;

        CPACSDomeType            m_domeType;

        CCPACSMaterialDefinition m_material;

    private:
        CPACSGenericFuelTankParameters(const CPACSGenericFuelTankParameters&) = delete;
        CPACSGenericFuelTankParameters& operator=(const CPACSGenericFuelTankParameters&) = delete;

        CPACSGenericFuelTankParameters(CPACSGenericFuelTankParameters&&) = delete;
        CPACSGenericFuelTankParameters& operator=(CPACSGenericFuelTankParameters&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSGenericFuelTankParameters = generated::CPACSGenericFuelTankParameters;
using CCPACSGenericFuelTank = generated::CPACSGenericFuelTank;
} // namespace tigl
