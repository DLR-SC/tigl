// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSCrashJobControl_crashSolver.h"
#include "CPACSCrashOutputFrequencyDef.h"
#include "CPACSCrashAdditionalOutputDef.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSAcCrashTool
        
        // generated from /xsd:schema/xsd:complexType[226]
        class CPACSCrashJobControl
        {
        public:
            TIGL_EXPORT CPACSCrashJobControl();
            TIGL_EXPORT virtual ~CPACSCrashJobControl();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const CPACSCrashJobControl_crashSolver& GetCrashSolver() const;
            TIGL_EXPORT CPACSCrashJobControl_crashSolver& GetCrashSolver();
            
            TIGL_EXPORT bool HasCrashSolverVersion() const;
            TIGL_EXPORT const std::string& GetCrashSolverVersion() const;
            TIGL_EXPORT void SetCrashSolverVersion(const std::string& value);
            
            TIGL_EXPORT const double& GetCrashTerminationTime() const;
            TIGL_EXPORT void SetCrashTerminationTime(const double& value);
            
            TIGL_EXPORT bool HasCrashNoOfProcessors() const;
            TIGL_EXPORT const int& GetCrashNoOfProcessors() const;
            TIGL_EXPORT void SetCrashNoOfProcessors(const int& value);
            
            TIGL_EXPORT bool HasCrashOutputFrequency() const;
            TIGL_EXPORT const CPACSCrashOutputFrequencyDef& GetCrashOutputFrequency() const;
            TIGL_EXPORT CPACSCrashOutputFrequencyDef& GetCrashOutputFrequency();
            
            TIGL_EXPORT bool HasCrashAdditionalOutput() const;
            TIGL_EXPORT const CPACSCrashAdditionalOutputDef& GetCrashAdditionalOutput() const;
            TIGL_EXPORT CPACSCrashAdditionalOutputDef& GetCrashAdditionalOutput();
            
        protected:
            CPACSCrashJobControl_crashSolver               m_crashSolver;
            boost::optional<std::string>                   m_crashSolverVersion;
            double                                         m_crashTerminationTime;
            boost::optional<int>                           m_crashNoOfProcessors;
            boost::optional<CPACSCrashOutputFrequencyDef>  m_crashOutputFrequency;
            boost::optional<CPACSCrashAdditionalOutputDef> m_crashAdditionalOutput;
            
        private:
            #ifdef HAVE_CPP11
            CPACSCrashJobControl(const CPACSCrashJobControl&) = delete;
            CPACSCrashJobControl& operator=(const CPACSCrashJobControl&) = delete;
            
            CPACSCrashJobControl(CPACSCrashJobControl&&) = delete;
            CPACSCrashJobControl& operator=(CPACSCrashJobControl&&) = delete;
            #else
            CPACSCrashJobControl(const CPACSCrashJobControl&);
            CPACSCrashJobControl& operator=(const CPACSCrashJobControl&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSCrashJobControl = generated::CPACSCrashJobControl;
    #else
    typedef generated::CPACSCrashJobControl CCPACSCrashJobControl;
    #endif
}
