// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSFqCharParameters
        // CPACSFqRatings
        
        // generated from /xsd:schema/xsd:complexType[349]
        class CPACSFqShortPeriod
        {
        public:
            TIGL_EXPORT CPACSFqShortPeriod();
            TIGL_EXPORT virtual ~CPACSFqShortPeriod();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT bool HasNAlpha() const;
            TIGL_EXPORT const double& GetNAlpha() const;
            TIGL_EXPORT void SetNAlpha(const double& value);
            
            TIGL_EXPORT bool HasSpFrequency() const;
            TIGL_EXPORT const double& GetSpFrequency() const;
            TIGL_EXPORT void SetSpFrequency(const double& value);
            
            TIGL_EXPORT bool HasSpDamping() const;
            TIGL_EXPORT const double& GetSpDamping() const;
            TIGL_EXPORT void SetSpDamping(const double& value);
            
            TIGL_EXPORT bool HasSpTauRed() const;
            TIGL_EXPORT const double& GetSpTauRed() const;
            TIGL_EXPORT void SetSpTauRed(const double& value);
            
            TIGL_EXPORT bool HasCap() const;
            TIGL_EXPORT const double& GetCap() const;
            TIGL_EXPORT void SetCap(const double& value);
            
        protected:
            boost::optional<double> m_nAlpha;
            boost::optional<double> m_spFrequency;
            boost::optional<double> m_spDamping;
            boost::optional<double> m_spTauRed;
            boost::optional<double> m_cap;
            
        private:
            #ifdef HAVE_CPP11
            CPACSFqShortPeriod(const CPACSFqShortPeriod&) = delete;
            CPACSFqShortPeriod& operator=(const CPACSFqShortPeriod&) = delete;
            
            CPACSFqShortPeriod(CPACSFqShortPeriod&&) = delete;
            CPACSFqShortPeriod& operator=(CPACSFqShortPeriod&&) = delete;
            #else
            CPACSFqShortPeriod(const CPACSFqShortPeriod&);
            CPACSFqShortPeriod& operator=(const CPACSFqShortPeriod&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSFqShortPeriod = generated::CPACSFqShortPeriod;
    #else
    typedef generated::CPACSFqShortPeriod CCPACSFqShortPeriod;
    #endif
}
