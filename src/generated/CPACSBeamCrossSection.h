// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <string>
#include <tixi.h>
#include "CTiglUIDObject.h"
#include "tigl_internal.h"

namespace tigl
{
class CTiglUIDManager;

namespace generated
{
    class CPACSGlobalBeamProperties;

    // This class is used in:
    // CPACSGlobalBeamProperties

    // generated from /xsd:schema/xsd:complexType[79]
    /// @brief beamCrossSectionType
    /// 
    /// beamCrossSectionType, containing the beam geometrical
    /// properties
    /// 
    class CPACSBeamCrossSection : public CTiglReqUIDObject
    {
    public:
        TIGL_EXPORT CPACSBeamCrossSection(CPACSGlobalBeamProperties* parent, CTiglUIDManager* uidMgr);

        TIGL_EXPORT virtual ~CPACSBeamCrossSection();

        TIGL_EXPORT CPACSGlobalBeamProperties* GetParent();

        TIGL_EXPORT const CPACSGlobalBeamProperties* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT CTiglUIDManager& GetUIDManager();
        TIGL_EXPORT const CTiglUIDManager& GetUIDManager() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const std::string& GetUID() const;
        TIGL_EXPORT virtual void SetUID(const std::string& value);

        TIGL_EXPORT virtual const double& GetArea() const;
        TIGL_EXPORT virtual void SetArea(const double& value);

        TIGL_EXPORT virtual const double& GetXMin() const;
        TIGL_EXPORT virtual void SetXMin(const double& value);

        TIGL_EXPORT virtual const double& GetXMax() const;
        TIGL_EXPORT virtual void SetXMax(const double& value);

        TIGL_EXPORT virtual const double& GetYMin() const;
        TIGL_EXPORT virtual void SetYMin(const double& value);

        TIGL_EXPORT virtual const double& GetYMax() const;
        TIGL_EXPORT virtual void SetYMax(const double& value);

    protected:
        CPACSGlobalBeamProperties* m_parent;

        CTiglUIDManager* m_uidMgr;

        std::string m_uID;
        double      m_area;
        double      m_xMin;
        double      m_xMax;
        double      m_yMin;
        double      m_yMax;

    private:
        CPACSBeamCrossSection(const CPACSBeamCrossSection&) = delete;
        CPACSBeamCrossSection& operator=(const CPACSBeamCrossSection&) = delete;

        CPACSBeamCrossSection(CPACSBeamCrossSection&&) = delete;
        CPACSBeamCrossSection& operator=(CPACSBeamCrossSection&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSBeamCrossSection = generated::CPACSBeamCrossSection;
using CCPACSGlobalBeamProperties = generated::CPACSGlobalBeamProperties;
} // namespace tigl
