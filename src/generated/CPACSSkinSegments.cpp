// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "CPACSSkinSegment.h"
#include "TixiHelper.h"
#include "CTiglLogging.h"
#include "CTiglError.h"
#include "CPACSSkinSegments.h"

namespace tigl
{
    namespace generated
    {
        CPACSSkinSegments::CPACSSkinSegments(){}
        CPACSSkinSegments::~CPACSSkinSegments() {}
        
        void CPACSSkinSegments::ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath)
        {
            // read element standardSheetElementUID
            if (tixihelper::TixiCheckElement(tixiHandle, xpath + "/standardSheetElementUID")) {
                m_standardSheetElementUID = tixihelper::TixiGetElement<std::string>(tixiHandle, xpath + "/standardSheetElementUID");
            }
            
            // read element skinSegment
            if (tixihelper::TixiCheckElement(tixiHandle, xpath + "/skinSegment")) {
                tixihelper::TixiReadElements(tixiHandle, xpath + "/skinSegment", m_skinSegment);
            }
            
        }
        
        void CPACSSkinSegments::WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const
        {
            // write element standardSheetElementUID
            if (m_standardSheetElementUID) {
                tixihelper::TixiCreateElementIfNotExists(tixiHandle, xpath + "/standardSheetElementUID");
                tixihelper::TixiSaveElement(tixiHandle, xpath + "/standardSheetElementUID", *m_standardSheetElementUID);
            }
            
            // write element skinSegment
            tixihelper::TixiSaveElements(tixiHandle, xpath + "/skinSegment", m_skinSegment);
            
        }
        
        bool CPACSSkinSegments::HasStandardSheetElementUID() const
        {
            return static_cast<bool>(m_standardSheetElementUID);
        }
        
        const std::string& CPACSSkinSegments::GetStandardSheetElementUID() const
        {
            return *m_standardSheetElementUID;
        }
        
        void CPACSSkinSegments::SetStandardSheetElementUID(const std::string& value)
        {
            m_standardSheetElementUID = value;
        }
        
        const std::vector<unique_ptr<CPACSSkinSegment>>& CPACSSkinSegments::GetSkinSegment() const
        {
            return m_skinSegment;
        }
        
        std::vector<unique_ptr<CPACSSkinSegment>>& CPACSSkinSegments::GetSkinSegment()
        {
            return m_skinSegment;
        }
        
    }
}
