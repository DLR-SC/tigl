// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSAlignmentStructMember.h"
#include "CPACSLongFloorBeamPosition_continuity.h"
#include "CPACSLongFloorBeamPosition_interpolation.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSLongFloorBeam
        
        // generated from /xsd:schema/xsd:complexType[505]
        class CPACSLongFloorBeamPosition
        {
        public:
            TIGL_EXPORT CPACSLongFloorBeamPosition();
            TIGL_EXPORT virtual ~CPACSLongFloorBeamPosition();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT bool HasUID() const;
            TIGL_EXPORT const std::string& GetUID() const;
            TIGL_EXPORT void SetUID(const std::string& value);
            
            TIGL_EXPORT const std::string& GetStructuralElementUID() const;
            TIGL_EXPORT void SetStructuralElementUID(const std::string& value);
            
            TIGL_EXPORT const std::string& GetCrossBeamUID() const;
            TIGL_EXPORT void SetCrossBeamUID(const std::string& value);
            
            TIGL_EXPORT const double& GetPositionY() const;
            TIGL_EXPORT void SetPositionY(const double& value);
            
            TIGL_EXPORT bool HasAlignment() const;
            TIGL_EXPORT const CPACSAlignmentStructMember& GetAlignment() const;
            TIGL_EXPORT CPACSAlignmentStructMember& GetAlignment();
            
            TIGL_EXPORT bool HasContinuity() const;
            TIGL_EXPORT const CPACSLongFloorBeamPosition_continuity& GetContinuity() const;
            TIGL_EXPORT CPACSLongFloorBeamPosition_continuity& GetContinuity();
            
            TIGL_EXPORT bool HasInterpolation() const;
            TIGL_EXPORT const CPACSLongFloorBeamPosition_interpolation& GetInterpolation() const;
            TIGL_EXPORT CPACSLongFloorBeamPosition_interpolation& GetInterpolation();
            
        protected:
            boost::optional<std::string>                              m_uID;
            std::string                                               m_structuralElementUID;
            std::string                                               m_crossBeamUID;
            double                                                    m_positionY;
            boost::optional<CPACSAlignmentStructMember>               m_alignment;
            boost::optional<CPACSLongFloorBeamPosition_continuity>    m_continuity;
            boost::optional<CPACSLongFloorBeamPosition_interpolation> m_interpolation;
            
        private:
            #ifdef HAVE_CPP11
            CPACSLongFloorBeamPosition(const CPACSLongFloorBeamPosition&) = delete;
            CPACSLongFloorBeamPosition& operator=(const CPACSLongFloorBeamPosition&) = delete;
            
            CPACSLongFloorBeamPosition(CPACSLongFloorBeamPosition&&) = delete;
            CPACSLongFloorBeamPosition& operator=(CPACSLongFloorBeamPosition&&) = delete;
            #else
            CPACSLongFloorBeamPosition(const CPACSLongFloorBeamPosition&);
            CPACSLongFloorBeamPosition& operator=(const CPACSLongFloorBeamPosition&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSLongFloorBeamPosition = generated::CPACSLongFloorBeamPosition;
    #else
    typedef generated::CPACSLongFloorBeamPosition CCPACSLongFloorBeamPosition;
    #endif
}
