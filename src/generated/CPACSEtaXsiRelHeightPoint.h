// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <boost/optional.hpp>
#include <boost/utility/in_place_factory.hpp>
#include <string>
#include <tixi.h>
#include "ITiglUIDRefObject.h"
#include "tigl_internal.h"

namespace tigl
{
class CTiglUIDManager;
class CTiglUIDObject;

namespace generated
{
    class CPACSStrutAssembly;

    // This class is used in:
    // CPACSStrutAssembly

    /// @brief Relative height at eta, xsi position
    /// 
    /// Point described by eta-xsi and a relative height coordinate.
    /// Can be either segment or component segment coordinates.
    /// If relHeight is not given, the point has no offset from the eta-xsi plane
    /// 
    class CPACSEtaXsiRelHeightPoint : public ITiglUIDRefObject
    {
    public:
        TIGL_EXPORT CPACSEtaXsiRelHeightPoint(CPACSStrutAssembly* parent, CTiglUIDManager* uidMgr);

        TIGL_EXPORT virtual ~CPACSEtaXsiRelHeightPoint();

        TIGL_EXPORT CPACSStrutAssembly* GetParent();

        TIGL_EXPORT const CPACSStrutAssembly* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT CTiglUIDManager& GetUIDManager();
        TIGL_EXPORT const CTiglUIDManager& GetUIDManager() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const double& GetEta() const;
        TIGL_EXPORT virtual void SetEta(const double& value);

        TIGL_EXPORT virtual const double& GetXsi() const;
        TIGL_EXPORT virtual void SetXsi(const double& value);

        TIGL_EXPORT virtual const boost::optional<double>& GetRelHeight() const;
        TIGL_EXPORT virtual void SetRelHeight(const boost::optional<double>& value);

        TIGL_EXPORT virtual const std::string& GetReferenceUID() const;
        TIGL_EXPORT virtual void SetReferenceUID(const std::string& value);

    protected:
        CPACSStrutAssembly* m_parent;

        CTiglUIDManager* m_uidMgr;

        /// Relative spanwise position. Eta refers to the segment or componentSegment depending on the referenced uID.
        double                  m_eta;

        /// Relative chordwise position. Xsi refers to the segment or componentSegment depending on the referenced uID.
        double                  m_xsi;

        /// Relative height position.
        /// relHeight is relative to the local airfoil thickness.
        boost::optional<double> m_relHeight;

        /// This reference uID determines the reference coordinate system.
        /// If it points to a segment, then the eta-xsi values are considered to be in segment
        /// eta-xsi coordinates; if it points to a componentSegment,
        /// then componentSegment eta-xsi coordinates are used.
        std::string             m_referenceUID;

    private:
        TIGL_EXPORT const CTiglUIDObject* GetNextUIDObject() const final;
        TIGL_EXPORT void NotifyUIDChange(const std::string& oldUid, const std::string& newUid) final;

        CPACSEtaXsiRelHeightPoint(const CPACSEtaXsiRelHeightPoint&) = delete;
        CPACSEtaXsiRelHeightPoint& operator=(const CPACSEtaXsiRelHeightPoint&) = delete;

        CPACSEtaXsiRelHeightPoint(CPACSEtaXsiRelHeightPoint&&) = delete;
        CPACSEtaXsiRelHeightPoint& operator=(CPACSEtaXsiRelHeightPoint&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSEtaXsiRelHeightPoint = generated::CPACSEtaXsiRelHeightPoint;
using CCPACSStrutAssembly = generated::CPACSStrutAssembly;
} // namespace tigl
