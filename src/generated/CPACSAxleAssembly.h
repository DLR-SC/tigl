// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <string>
#include <tixi.h>
#include "CPACSAxle.h"
#include "tigl_internal.h"

namespace tigl
{
class CTiglUIDManager;
class CTiglUIDObject;

namespace generated
{
    class CPACSAxleAssemblies;

    // This class is used in:
    // CPACSAxleAssemblies

    /// @brief Bogie axle assembly
    /// 
    /// Description of an axle installed on the bogie and its
    /// relative position to it
    /// 
    class CPACSAxleAssembly
    {
    public:
        TIGL_EXPORT CPACSAxleAssembly(CPACSAxleAssemblies* parent, CTiglUIDManager* uidMgr);

        TIGL_EXPORT virtual ~CPACSAxleAssembly();

        TIGL_EXPORT CPACSAxleAssemblies* GetParent();

        TIGL_EXPORT const CPACSAxleAssemblies* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT CTiglUIDManager& GetUIDManager();
        TIGL_EXPORT const CTiglUIDManager& GetUIDManager() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const CPACSAxle& GetAxle() const;
        TIGL_EXPORT virtual CPACSAxle& GetAxle();

        TIGL_EXPORT virtual const double& GetPosOnBogie() const;
        TIGL_EXPORT virtual void SetPosOnBogie(const double& value);

    protected:
        CPACSAxleAssemblies* m_parent;

        CTiglUIDManager* m_uidMgr;

        CPACSAxle m_axle;

        /// Relative position of the axle to the bogie (if more than one axle is defined; 0 = forward end of bogie; 1 = rear end of bogie)
        double    m_posOnBogie;

    private:
        CPACSAxleAssembly(const CPACSAxleAssembly&) = delete;
        CPACSAxleAssembly& operator=(const CPACSAxleAssembly&) = delete;

        CPACSAxleAssembly(CPACSAxleAssembly&&) = delete;
        CPACSAxleAssembly& operator=(CPACSAxleAssembly&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSAxleAssembly = generated::CPACSAxleAssembly;
using CCPACSAxleAssemblies = generated::CPACSAxleAssemblies;
} // namespace tigl
