// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSControlSurfaceSkinCutOut.h"
#include "CPACSControlSurfaceSkinCutOut.h"
#include "CPACSCutOutControlPoints.h"
#include "CPACSCutOutProfiles.h"
#include "CPACSControlSurfaceSkinCutOutBorder.h"
#include "CPACSControlSurfaceSkinCutOutBorder.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSLeadingEdgeDevice
        // CPACSSpoiler
        // CPACSTrailingEdgeDevice
        
        // generated from /xsd:schema/xsd:complexType[192]
        class CPACSControlSurfaceWingCutOut
        {
        public:
            TIGL_EXPORT CPACSControlSurfaceWingCutOut();
            TIGL_EXPORT virtual ~CPACSControlSurfaceWingCutOut();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const CPACSControlSurfaceSkinCutOut& GetUpperSkin() const;
            TIGL_EXPORT CPACSControlSurfaceSkinCutOut& GetUpperSkin();
            
            TIGL_EXPORT const CPACSControlSurfaceSkinCutOut& GetLowerSkin() const;
            TIGL_EXPORT CPACSControlSurfaceSkinCutOut& GetLowerSkin();
            
            TIGL_EXPORT bool HasCutOutProfileControlPoint() const;
            TIGL_EXPORT const CPACSCutOutControlPoints& GetCutOutProfileControlPoint() const;
            TIGL_EXPORT CPACSCutOutControlPoints& GetCutOutProfileControlPoint();
            
            TIGL_EXPORT bool HasCutOutProfiles() const;
            TIGL_EXPORT const CPACSCutOutProfiles& GetCutOutProfiles() const;
            TIGL_EXPORT CPACSCutOutProfiles& GetCutOutProfiles();
            
            TIGL_EXPORT bool HasInnerBorder() const;
            TIGL_EXPORT const CPACSControlSurfaceSkinCutOutBorder& GetInnerBorder() const;
            TIGL_EXPORT CPACSControlSurfaceSkinCutOutBorder& GetInnerBorder();
            
            TIGL_EXPORT bool HasOuterBorder() const;
            TIGL_EXPORT const CPACSControlSurfaceSkinCutOutBorder& GetOuterBorder() const;
            TIGL_EXPORT CPACSControlSurfaceSkinCutOutBorder& GetOuterBorder();
            
        protected:
            CPACSControlSurfaceSkinCutOut                        m_upperSkin;
            CPACSControlSurfaceSkinCutOut                        m_lowerSkin;
            boost::optional<CPACSCutOutControlPoints>            m_cutOutProfileControlPoint;
            boost::optional<CPACSCutOutProfiles>                 m_cutOutProfiles;
            boost::optional<CPACSControlSurfaceSkinCutOutBorder> m_innerBorder;
            boost::optional<CPACSControlSurfaceSkinCutOutBorder> m_outerBorder;
            
        private:
            #ifdef HAVE_CPP11
            CPACSControlSurfaceWingCutOut(const CPACSControlSurfaceWingCutOut&) = delete;
            CPACSControlSurfaceWingCutOut& operator=(const CPACSControlSurfaceWingCutOut&) = delete;
            
            CPACSControlSurfaceWingCutOut(CPACSControlSurfaceWingCutOut&&) = delete;
            CPACSControlSurfaceWingCutOut& operator=(CPACSControlSurfaceWingCutOut&&) = delete;
            #else
            CPACSControlSurfaceWingCutOut(const CPACSControlSurfaceWingCutOut&);
            CPACSControlSurfaceWingCutOut& operator=(const CPACSControlSurfaceWingCutOut&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSControlSurfaceWingCutOut = generated::CPACSControlSurfaceWingCutOut;
    #else
    typedef generated::CPACSControlSurfaceWingCutOut CCPACSControlSurfaceWingCutOut;
    #endif
}
