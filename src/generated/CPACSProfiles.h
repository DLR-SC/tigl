// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include <boost/utility/in_place_factory.hpp>
#include "tigl_internal.h"
#include <CCPACSFuselageProfiles.h>
#include <CCPACSWingProfiles.h>
#include <CCPACSGuideCurveProfiles.h>
#include <CCPACSRotorProfiles.h>

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSVehicles
        
        // generated from /xsd:schema/xsd:complexType[708]
        class CPACSProfiles
        {
        public:
            TIGL_EXPORT CPACSProfiles();
            TIGL_EXPORT virtual ~CPACSProfiles();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const boost::optional<CCPACSFuselageProfiles>& GetFuselageProfiles() const;
            TIGL_EXPORT boost::optional<CCPACSFuselageProfiles>& GetFuselageProfiles();
            
            TIGL_EXPORT const boost::optional<CCPACSWingProfiles>& GetWingAirfoils() const;
            TIGL_EXPORT boost::optional<CCPACSWingProfiles>& GetWingAirfoils();
            
            TIGL_EXPORT const boost::optional<CCPACSGuideCurveProfiles>& GetGuideCurves() const;
            TIGL_EXPORT boost::optional<CCPACSGuideCurveProfiles>& GetGuideCurves();
            
            TIGL_EXPORT const boost::optional<CCPACSRotorProfiles>& GetRotorAirfoils() const;
            TIGL_EXPORT boost::optional<CCPACSRotorProfiles>& GetRotorAirfoils();
            
        protected:
            boost::optional<CCPACSFuselageProfiles>   m_fuselageProfiles;
            boost::optional<CCPACSWingProfiles>       m_wingAirfoils;
            boost::optional<CCPACSGuideCurveProfiles> m_guideCurves;
            boost::optional<CCPACSRotorProfiles>      m_rotorAirfoils;
            
        private:
            #ifdef HAVE_CPP11
            CPACSProfiles(const CPACSProfiles&) = delete;
            CPACSProfiles& operator=(const CPACSProfiles&) = delete;
            
            CPACSProfiles(CPACSProfiles&&) = delete;
            CPACSProfiles& operator=(CPACSProfiles&&) = delete;
            #else
            CPACSProfiles(const CPACSProfiles&);
            CPACSProfiles& operator=(const CPACSProfiles&);
            #endif
        };
    }
    
    // Aliases in tigl namespace
    // CPACSProfiles is customized, use type CCPACSProfiles directly
}
