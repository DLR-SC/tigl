// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <string>
#include <tixi.h>
#include "CPACSPosExcl0DoubleBase.h"
#include "tigl_internal.h"

namespace tigl
{
class CTiglUIDObject;

namespace generated
{
    class CPACSStandardProfile;

    // This class is used in:
    // CPACSStandardProfile

    /// @brief Superellipse
    /// 
    /// A profile based on superellipses is composed of an upper and a lower semi-ellipse, which may differ from each other in their parameterization. The total width and height of the profile is always 1, since scaling is performed after referencing (e.g., in the fuselage).
    /// This lowerHeightFraction describes the portion of the lower semi-ellipse on the total height.
    /// The resulting profile is defined by the following set of equations:
    /// @see superEllipseUpper
    /// @see superEllipseLower
    /// with
    /// @see superEllipseLowerZ0
    /// The following examples indicate the various possibilities of parametric profiles:
    /// Example 1 : ( mUpper,nUpper,mLower,nLower, lowerHeightFraction ) = (0.5; 2; 5; 3; 0.25)
    /// @see superEllipseExample1
    /// Example 2 : ( mUpper,nUpper,mLower,nLower, lowerHeightFraction ) = (2; 2; 2; 2; 0.5) = a circle
    /// @see superEllipseExample2
    /// Example 3 : ( mUpper,nUpper,mLower,nLower, lowerHeightFraction ) = (1; 1; 1; 1; 0.5) = a square / diamond
    /// @see superEllipseExample3
    /// Note : For exponents that are infinitely large, the superellipse converges to a rectangle. However, the value Inf is not a valid entry at this point. Use the square element instead.
    /// 
    class CPACSSuperEllipseProfile
    {
    public:
        TIGL_EXPORT CPACSSuperEllipseProfile(CPACSStandardProfile* parent);

        TIGL_EXPORT virtual ~CPACSSuperEllipseProfile();

        TIGL_EXPORT CPACSStandardProfile* GetParent();

        TIGL_EXPORT const CPACSStandardProfile* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const CPACSPosExcl0DoubleBase& GetMUpper() const;
        TIGL_EXPORT virtual CPACSPosExcl0DoubleBase& GetMUpper();

        TIGL_EXPORT virtual const CPACSPosExcl0DoubleBase& GetNUpper() const;
        TIGL_EXPORT virtual CPACSPosExcl0DoubleBase& GetNUpper();

        TIGL_EXPORT virtual const CPACSPosExcl0DoubleBase& GetMLower() const;
        TIGL_EXPORT virtual CPACSPosExcl0DoubleBase& GetMLower();

        TIGL_EXPORT virtual const CPACSPosExcl0DoubleBase& GetNLower() const;
        TIGL_EXPORT virtual CPACSPosExcl0DoubleBase& GetNLower();

        TIGL_EXPORT virtual const double& GetLowerHeightFraction() const;
        TIGL_EXPORT virtual void SetLowerHeightFraction(const double& value);

    protected:
        CPACSStandardProfile* m_parent;

        /// Exponent m for upper semi-ellipse
        CPACSPosExcl0DoubleBase m_mUpper;

        /// Exponent n for upper semi-ellipse
        CPACSPosExcl0DoubleBase m_nUpper;

        /// Exponent m for lower semi-ellipse
        CPACSPosExcl0DoubleBase m_mLower;

        /// Exponent n for lower semi-ellipse
        CPACSPosExcl0DoubleBase m_nLower;

        double                  m_lowerHeightFraction;

    private:
        CPACSSuperEllipseProfile(const CPACSSuperEllipseProfile&) = delete;
        CPACSSuperEllipseProfile& operator=(const CPACSSuperEllipseProfile&) = delete;

        CPACSSuperEllipseProfile(CPACSSuperEllipseProfile&&) = delete;
        CPACSSuperEllipseProfile& operator=(CPACSSuperEllipseProfile&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSSuperEllipseProfile = generated::CPACSSuperEllipseProfile;
using CCPACSStandardProfile = generated::CPACSStandardProfile;
} // namespace tigl
