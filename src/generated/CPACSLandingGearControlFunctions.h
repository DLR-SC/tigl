// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <boost/optional.hpp>
#include <boost/utility/in_place_factory.hpp>
#include <string>
#include <tixi.h>
#include "CPACSLandingGearBrakingState.h"
#include "CPACSLandingGearExtensionFunction.h"
#include "CPACSLandingGearSteeringFunction.h"
#include "CreateIfNotExists.h"
#include "tigl_internal.h"

namespace tigl
{
class CTiglUIDManager;
class CTiglUIDObject;

namespace generated
{
    class CPACSLandingGearControl;

    // This class is used in:
    // CPACSLandingGearControl

    /// @brief Landing gear control functions
    /// 
    /// A list of functions which can be addressed by the controlDistributor.
    /// 
    class CPACSLandingGearControlFunctions
    {
    public:
        TIGL_EXPORT CPACSLandingGearControlFunctions(CPACSLandingGearControl* parent, CTiglUIDManager* uidMgr);

        TIGL_EXPORT virtual ~CPACSLandingGearControlFunctions();

        TIGL_EXPORT CPACSLandingGearControl* GetParent();

        TIGL_EXPORT const CPACSLandingGearControl* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT CTiglUIDManager& GetUIDManager();
        TIGL_EXPORT const CTiglUIDManager& GetUIDManager() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const boost::optional<CPACSLandingGearExtensionFunction>& GetExtensionPath() const;
        TIGL_EXPORT virtual boost::optional<CPACSLandingGearExtensionFunction>& GetExtensionPath();

        TIGL_EXPORT virtual const boost::optional<CPACSLandingGearSteeringFunction>& GetSteeringPath() const;
        TIGL_EXPORT virtual boost::optional<CPACSLandingGearSteeringFunction>& GetSteeringPath();

        TIGL_EXPORT virtual const boost::optional<CPACSLandingGearBrakingState>& GetBrakingState() const;
        TIGL_EXPORT virtual boost::optional<CPACSLandingGearBrakingState>& GetBrakingState();

        TIGL_EXPORT virtual CPACSLandingGearExtensionFunction& GetExtensionPath(CreateIfNotExistsTag);
        TIGL_EXPORT virtual void RemoveExtensionPath();

        TIGL_EXPORT virtual CPACSLandingGearSteeringFunction& GetSteeringPath(CreateIfNotExistsTag);
        TIGL_EXPORT virtual void RemoveSteeringPath();

        TIGL_EXPORT virtual CPACSLandingGearBrakingState& GetBrakingState(CreateIfNotExistsTag);
        TIGL_EXPORT virtual void RemoveBrakingState();

    protected:
        CPACSLandingGearControl* m_parent;

        CTiglUIDManager* m_uidMgr;

        /// Extension path
        boost::optional<CPACSLandingGearExtensionFunction> m_extensionPath;

        /// Steering path
        boost::optional<CPACSLandingGearSteeringFunction>  m_steeringPath;

        /// Braking state
        boost::optional<CPACSLandingGearBrakingState>      m_brakingState;

    private:
        CPACSLandingGearControlFunctions(const CPACSLandingGearControlFunctions&) = delete;
        CPACSLandingGearControlFunctions& operator=(const CPACSLandingGearControlFunctions&) = delete;

        CPACSLandingGearControlFunctions(CPACSLandingGearControlFunctions&&) = delete;
        CPACSLandingGearControlFunctions& operator=(CPACSLandingGearControlFunctions&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSLandingGearControlFunctions = generated::CPACSLandingGearControlFunctions;
using CCPACSLandingGearControl = generated::CPACSLandingGearControl;
} // namespace tigl
