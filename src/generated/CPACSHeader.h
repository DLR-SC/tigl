// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <boost/optional.hpp>
#include <boost/utility/in_place_factory.hpp>
#include <string>
#include <tixi.h>
#include "CPACSVersionInfos.h"
#include "tigl_internal.h"

namespace tigl
{
class CTiglUIDObject;

namespace generated
{
    class CPACSCpacs;

    // This class is used in:
    // CPACSCpacs

    /// @brief CPACS header
    /// 
    /// Header type, containing CPACS dataset description
    /// 
    class CPACSHeader
    {
    public:
        TIGL_EXPORT CPACSHeader(CPACSCpacs* parent);

        TIGL_EXPORT virtual ~CPACSHeader();

        TIGL_EXPORT CPACSCpacs* GetParent();

        TIGL_EXPORT const CPACSCpacs* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const std::string& GetName() const;
        TIGL_EXPORT virtual void SetName(const std::string& value);

        TIGL_EXPORT virtual const boost::optional<std::string>& GetDescription() const;
        TIGL_EXPORT virtual void SetDescription(const boost::optional<std::string>& value);

        TIGL_EXPORT virtual const std::string& GetVersion() const;
        TIGL_EXPORT virtual void SetVersion(const std::string& value);

        TIGL_EXPORT virtual const boost::optional<std::string>& GetCpacsVersion() const;
        TIGL_EXPORT virtual void SetCpacsVersion(const boost::optional<std::string>& value);

        TIGL_EXPORT virtual const CPACSVersionInfos& GetVersionInfos() const;
        TIGL_EXPORT virtual CPACSVersionInfos& GetVersionInfos();

    protected:
        CPACSCpacs* m_parent;

        /// Name of CPACS dataset
        std::string                  m_name;

        /// Description of CPACS dataset
        boost::optional<std::string> m_description;

        /// Version of initial CPACS dataset according to the Semantic Versioning 2.0.0 standard.
        std::string                  m_version;

        /// DEPRECATED: Should only be set to allow TiGL to open the file until TiGL is adopted accordingly.
        /// Will be replaced by the cpacsVersion element in versionInfos.
        boost::optional<std::string> m_cpacsVersion;

        CPACSVersionInfos            m_versionInfos;

    private:
        CPACSHeader(const CPACSHeader&) = delete;
        CPACSHeader& operator=(const CPACSHeader&) = delete;

        CPACSHeader(CPACSHeader&&) = delete;
        CPACSHeader& operator=(CPACSHeader&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSHeader = generated::CPACSHeader;
using CCPACSCpacs = generated::CPACSCpacs;
} // namespace tigl
