// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSFlowCondition.h"
#include "CPACSCoefficients.h"
#include "CPACSWingsCoefficients.h"
#include "CPACSFuselagesCoefficients.h"
#include "CPACSGenericComponentsCoefficients.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSAeroDataSetsForLoads
        
        // generated from /xsd:schema/xsd:complexType[12]
        class CPACSAeroDataSetForLoads
        {
        public:
            TIGL_EXPORT CPACSAeroDataSetForLoads();
            TIGL_EXPORT virtual ~CPACSAeroDataSetForLoads();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const std::string& GetUID() const;
            TIGL_EXPORT void SetUID(const std::string& value);
            
            TIGL_EXPORT const CPACSFlowCondition& GetFlowCondition() const;
            TIGL_EXPORT CPACSFlowCondition& GetFlowCondition();
            
            TIGL_EXPORT bool HasTotalCoefficients() const;
            TIGL_EXPORT const CPACSCoefficients& GetTotalCoefficients() const;
            TIGL_EXPORT CPACSCoefficients& GetTotalCoefficients();
            
            TIGL_EXPORT bool HasWings() const;
            TIGL_EXPORT const CPACSWingsCoefficients& GetWings() const;
            TIGL_EXPORT CPACSWingsCoefficients& GetWings();
            
            TIGL_EXPORT bool HasFuselages() const;
            TIGL_EXPORT const CPACSFuselagesCoefficients& GetFuselages() const;
            TIGL_EXPORT CPACSFuselagesCoefficients& GetFuselages();
            
            TIGL_EXPORT bool HasGenericComponents() const;
            TIGL_EXPORT const CPACSGenericComponentsCoefficients& GetGenericComponents() const;
            TIGL_EXPORT CPACSGenericComponentsCoefficients& GetGenericComponents();
            
        protected:
            std::string                                         m_uID;
            CPACSFlowCondition                                  m_flowCondition;
            boost::optional<CPACSCoefficients>                  m_totalCoefficients;
            boost::optional<CPACSWingsCoefficients>             m_wings;
            boost::optional<CPACSFuselagesCoefficients>         m_fuselages;
            boost::optional<CPACSGenericComponentsCoefficients> m_genericComponents;
            
        private:
            #ifdef HAVE_CPP11
            CPACSAeroDataSetForLoads(const CPACSAeroDataSetForLoads&) = delete;
            CPACSAeroDataSetForLoads& operator=(const CPACSAeroDataSetForLoads&) = delete;
            
            CPACSAeroDataSetForLoads(CPACSAeroDataSetForLoads&&) = delete;
            CPACSAeroDataSetForLoads& operator=(CPACSAeroDataSetForLoads&&) = delete;
            #else
            CPACSAeroDataSetForLoads(const CPACSAeroDataSetForLoads&);
            CPACSAeroDataSetForLoads& operator=(const CPACSAeroDataSetForLoads&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSAeroDataSetForLoads = generated::CPACSAeroDataSetForLoads;
    #else
    typedef generated::CPACSAeroDataSetForLoads CCPACSAeroDataSetForLoads;
    #endif
}
