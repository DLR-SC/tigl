// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSPointXYZ.h"
#include "CPACSLoadCaseTranslationVelocity.h"
#include "CPACSLoadCaseTranslationAcceleration.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSAttitudeAndMotion
        
        // generated from /xsd:schema/xsd:complexType[497]
        class CPACSLoadCaseTranslation
        {
        public:
            TIGL_EXPORT CPACSLoadCaseTranslation();
            TIGL_EXPORT virtual ~CPACSLoadCaseTranslation();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT bool HasDisplacement() const;
            TIGL_EXPORT const CPACSPointXYZ& GetDisplacement() const;
            TIGL_EXPORT CPACSPointXYZ& GetDisplacement();
            
            TIGL_EXPORT bool HasVelocity() const;
            TIGL_EXPORT const CPACSLoadCaseTranslationVelocity& GetVelocity() const;
            TIGL_EXPORT CPACSLoadCaseTranslationVelocity& GetVelocity();
            
            TIGL_EXPORT bool HasAcceleration() const;
            TIGL_EXPORT const CPACSLoadCaseTranslationAcceleration& GetAcceleration() const;
            TIGL_EXPORT CPACSLoadCaseTranslationAcceleration& GetAcceleration();
            
        protected:
            boost::optional<CPACSPointXYZ>                        m_displacement;
            boost::optional<CPACSLoadCaseTranslationVelocity>     m_velocity;
            boost::optional<CPACSLoadCaseTranslationAcceleration> m_acceleration;
            
        private:
            #ifdef HAVE_CPP11
            CPACSLoadCaseTranslation(const CPACSLoadCaseTranslation&) = delete;
            CPACSLoadCaseTranslation& operator=(const CPACSLoadCaseTranslation&) = delete;
            
            CPACSLoadCaseTranslation(CPACSLoadCaseTranslation&&) = delete;
            CPACSLoadCaseTranslation& operator=(CPACSLoadCaseTranslation&&) = delete;
            #else
            CPACSLoadCaseTranslation(const CPACSLoadCaseTranslation&);
            CPACSLoadCaseTranslation& operator=(const CPACSLoadCaseTranslation&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSLoadCaseTranslation = generated::CPACSLoadCaseTranslation;
    #else
    typedef generated::CPACSLoadCaseTranslation CCPACSLoadCaseTranslation;
    #endif
}
