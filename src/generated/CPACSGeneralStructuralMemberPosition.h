// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSAlignmentStringFrame.h"
#include "CPACSGeneralStructuralMemberPosition_continuity.h"
#include "CPACSGeneralStructuralMemberPosition_interpolation.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSGeneralStructuralMember
        
        // generated from /xsd:schema/xsd:complexType[381]
        class CPACSGeneralStructuralMemberPosition
        {
        public:
            TIGL_EXPORT CPACSGeneralStructuralMemberPosition();
            TIGL_EXPORT virtual ~CPACSGeneralStructuralMemberPosition();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT bool HasUID() const;
            TIGL_EXPORT const std::string& GetUID() const;
            TIGL_EXPORT void SetUID(const std::string& value);
            
            TIGL_EXPORT bool HasStructuralElementUID() const;
            TIGL_EXPORT const std::string& GetStructuralElementUID() const;
            TIGL_EXPORT void SetStructuralElementUID(const std::string& value);
            
            TIGL_EXPORT bool HasPositionX() const;
            TIGL_EXPORT const double& GetPositionX() const;
            TIGL_EXPORT void SetPositionX(const double& value);
            
            TIGL_EXPORT bool HasPositionXUidStart() const;
            TIGL_EXPORT const std::string& GetPositionXUidStart() const;
            TIGL_EXPORT void SetPositionXUidStart(const std::string& value);
            
            TIGL_EXPORT bool HasPositionXUidEnd() const;
            TIGL_EXPORT const std::string& GetPositionXUidEnd() const;
            TIGL_EXPORT void SetPositionXUidEnd(const std::string& value);
            
            TIGL_EXPORT bool HasPositionXUidMin() const;
            TIGL_EXPORT const std::string& GetPositionXUidMin() const;
            TIGL_EXPORT void SetPositionXUidMin(const std::string& value);
            
            TIGL_EXPORT bool HasPositionXUidMid() const;
            TIGL_EXPORT const std::string& GetPositionXUidMid() const;
            TIGL_EXPORT void SetPositionXUidMid(const std::string& value);
            
            TIGL_EXPORT bool HasPositionXUidMax() const;
            TIGL_EXPORT const std::string& GetPositionXUidMax() const;
            TIGL_EXPORT void SetPositionXUidMax(const std::string& value);
            
            TIGL_EXPORT bool HasPositionXAngle() const;
            TIGL_EXPORT const double& GetPositionXAngle() const;
            TIGL_EXPORT void SetPositionXAngle(const double& value);
            
            TIGL_EXPORT bool HasPositionXFact() const;
            TIGL_EXPORT const double& GetPositionXFact() const;
            TIGL_EXPORT void SetPositionXFact(const double& value);
            
            TIGL_EXPORT bool HasPositionXoffset() const;
            TIGL_EXPORT const double& GetPositionXoffset() const;
            TIGL_EXPORT void SetPositionXoffset(const double& value);
            
            TIGL_EXPORT bool HasAlignment() const;
            TIGL_EXPORT const CPACSAlignmentStringFrame& GetAlignment() const;
            TIGL_EXPORT CPACSAlignmentStringFrame& GetAlignment();
            
            TIGL_EXPORT bool HasContinuity() const;
            TIGL_EXPORT const CPACSGeneralStructuralMemberPosition_continuity& GetContinuity() const;
            TIGL_EXPORT CPACSGeneralStructuralMemberPosition_continuity& GetContinuity();
            
            TIGL_EXPORT bool HasInterpolation() const;
            TIGL_EXPORT const CPACSGeneralStructuralMemberPosition_interpolation& GetInterpolation() const;
            TIGL_EXPORT CPACSGeneralStructuralMemberPosition_interpolation& GetInterpolation();
            
        protected:
            boost::optional<std::string>                                        m_uID;
            boost::optional<std::string>                                        m_structuralElementUID;
            boost::optional<double>                                             m_positionX;
            boost::optional<std::string>                                        m_positionXUidStart;
            boost::optional<std::string>                                        m_positionXUidEnd;
            boost::optional<std::string>                                        m_positionXUidMin;
            boost::optional<std::string>                                        m_positionXUidMid;
            boost::optional<std::string>                                        m_positionXUidMax;
            boost::optional<double>                                             m_positionXAngle;
            boost::optional<double>                                             m_positionXFact;
            boost::optional<double>                                             m_positionXoffset;
            boost::optional<CPACSAlignmentStringFrame>                          m_alignment;
            boost::optional<CPACSGeneralStructuralMemberPosition_continuity>    m_continuity;
            boost::optional<CPACSGeneralStructuralMemberPosition_interpolation> m_interpolation;
            
        private:
            #ifdef HAVE_CPP11
            CPACSGeneralStructuralMemberPosition(const CPACSGeneralStructuralMemberPosition&) = delete;
            CPACSGeneralStructuralMemberPosition& operator=(const CPACSGeneralStructuralMemberPosition&) = delete;
            
            CPACSGeneralStructuralMemberPosition(CPACSGeneralStructuralMemberPosition&&) = delete;
            CPACSGeneralStructuralMemberPosition& operator=(CPACSGeneralStructuralMemberPosition&&) = delete;
            #else
            CPACSGeneralStructuralMemberPosition(const CPACSGeneralStructuralMemberPosition&);
            CPACSGeneralStructuralMemberPosition& operator=(const CPACSGeneralStructuralMemberPosition&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSGeneralStructuralMemberPosition = generated::CPACSGeneralStructuralMemberPosition;
    #else
    typedef generated::CPACSGeneralStructuralMemberPosition CCPACSGeneralStructuralMemberPosition;
    #endif
}
