// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include "tigl_internal.h"
#include "CPACSCockpitControls.h"
#include "CPACSCommandCases.h"
#include "CPACSControlDistributors.h"
#include "CPACSControlLaws.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSAircraftModel
        // CPACSRotorcraftModel
        
        // generated from /xsd:schema/xsd:complexType[819]
        class CPACSSystems
        {
        public:
            TIGL_EXPORT CPACSSystems();
            TIGL_EXPORT virtual ~CPACSSystems();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const CPACSCockpitControls& GetCockpitControls() const;
            TIGL_EXPORT CPACSCockpitControls& GetCockpitControls();
            
            TIGL_EXPORT const CPACSCommandCases& GetCommandCases() const;
            TIGL_EXPORT CPACSCommandCases& GetCommandCases();
            
            TIGL_EXPORT const CPACSControlDistributors& GetControlDistributors() const;
            TIGL_EXPORT CPACSControlDistributors& GetControlDistributors();
            
            TIGL_EXPORT const CPACSControlLaws& GetControlLaws() const;
            TIGL_EXPORT CPACSControlLaws& GetControlLaws();
            
        protected:
            CPACSCockpitControls     m_cockpitControls;
            CPACSCommandCases        m_commandCases;
            CPACSControlDistributors m_controlDistributors;
            CPACSControlLaws         m_controlLaws;
            
        private:
            #ifdef HAVE_CPP11
            CPACSSystems(const CPACSSystems&) = delete;
            CPACSSystems& operator=(const CPACSSystems&) = delete;
            
            CPACSSystems(CPACSSystems&&) = delete;
            CPACSSystems& operator=(CPACSSystems&&) = delete;
            #else
            CPACSSystems(const CPACSSystems&);
            CPACSSystems& operator=(const CPACSSystems&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSSystems = generated::CPACSSystems;
    #else
    typedef generated::CPACSSystems CCPACSSystems;
    #endif
}
