// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include <CCPACSMaterial.h>
#include "CPACSTrackCar.h"
#include "CPACSTrackStrut1.h"
#include "CPACSTrackStrut2.h"
#include <CCPACSMaterial.h>
#include <CCPACSMaterial.h>
#include <CCPACSMaterial.h>
#include <CCPACSMaterial.h>
#include <CCPACSMaterial.h>
#include <CCPACSMaterial.h>
#include "CPACSTrackFairing.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSControlSurfaceTrackType
        
        // generated from /xsd:schema/xsd:complexType[837]
        class CPACSTrackStructure
        {
        public:
            TIGL_EXPORT CPACSTrackStructure();
            TIGL_EXPORT virtual ~CPACSTrackStructure();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT bool HasControlSurfaceAttachment() const;
            TIGL_EXPORT const CCPACSMaterial& GetControlSurfaceAttachment() const;
            TIGL_EXPORT CCPACSMaterial& GetControlSurfaceAttachment();
            
            TIGL_EXPORT bool HasCar() const;
            TIGL_EXPORT const CPACSTrackCar& GetCar() const;
            TIGL_EXPORT CPACSTrackCar& GetCar();
            
            TIGL_EXPORT bool HasStrut1() const;
            TIGL_EXPORT const CPACSTrackStrut1& GetStrut1() const;
            TIGL_EXPORT CPACSTrackStrut1& GetStrut1();
            
            TIGL_EXPORT bool HasStrut2() const;
            TIGL_EXPORT const CPACSTrackStrut2& GetStrut2() const;
            TIGL_EXPORT CPACSTrackStrut2& GetStrut2();
            
            TIGL_EXPORT bool HasStrut3() const;
            TIGL_EXPORT const CCPACSMaterial& GetStrut3() const;
            TIGL_EXPORT CCPACSMaterial& GetStrut3();
            
            TIGL_EXPORT bool HasSidePanels() const;
            TIGL_EXPORT const CCPACSMaterial& GetSidePanels() const;
            TIGL_EXPORT CCPACSMaterial& GetSidePanels();
            
            TIGL_EXPORT bool HasUpperPanel() const;
            TIGL_EXPORT const CCPACSMaterial& GetUpperPanel() const;
            TIGL_EXPORT CCPACSMaterial& GetUpperPanel();
            
            TIGL_EXPORT bool HasLowerPanel() const;
            TIGL_EXPORT const CCPACSMaterial& GetLowerPanel() const;
            TIGL_EXPORT CCPACSMaterial& GetLowerPanel();
            
            TIGL_EXPORT bool HasRollerTrack() const;
            TIGL_EXPORT const CCPACSMaterial& GetRollerTrack() const;
            TIGL_EXPORT CCPACSMaterial& GetRollerTrack();
            
            TIGL_EXPORT bool HasRibs() const;
            TIGL_EXPORT const CCPACSMaterial& GetRibs() const;
            TIGL_EXPORT CCPACSMaterial& GetRibs();
            
            TIGL_EXPORT bool HasFairing() const;
            TIGL_EXPORT const CPACSTrackFairing& GetFairing() const;
            TIGL_EXPORT CPACSTrackFairing& GetFairing();
            
        protected:
            boost::optional<CCPACSMaterial>    m_controlSurfaceAttachment;
            boost::optional<CPACSTrackCar>     m_car;
            boost::optional<CPACSTrackStrut1>  m_strut1;
            boost::optional<CPACSTrackStrut2>  m_strut2;
            boost::optional<CCPACSMaterial>    m_strut3;
            boost::optional<CCPACSMaterial>    m_sidePanels;
            boost::optional<CCPACSMaterial>    m_upperPanel;
            boost::optional<CCPACSMaterial>    m_lowerPanel;
            boost::optional<CCPACSMaterial>    m_rollerTrack;
            boost::optional<CCPACSMaterial>    m_ribs;
            boost::optional<CPACSTrackFairing> m_fairing;
            
        private:
            #ifdef HAVE_CPP11
            CPACSTrackStructure(const CPACSTrackStructure&) = delete;
            CPACSTrackStructure& operator=(const CPACSTrackStructure&) = delete;
            
            CPACSTrackStructure(CPACSTrackStructure&&) = delete;
            CPACSTrackStructure& operator=(CPACSTrackStructure&&) = delete;
            #else
            CPACSTrackStructure(const CPACSTrackStructure&);
            CPACSTrackStructure& operator=(const CPACSTrackStructure&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSTrackStructure = generated::CPACSTrackStructure;
    #else
    typedef generated::CPACSTrackStructure CCPACSTrackStructure;
    #endif
}
