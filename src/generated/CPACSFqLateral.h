// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include "tigl_internal.h"
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSFqCase
        
        // generated from /xsd:schema/xsd:complexType[343]
        class CPACSFqLateral
        {
        public:
            TIGL_EXPORT CPACSFqLateral();
            TIGL_EXPORT virtual ~CPACSFqLateral();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const CCPACSStringVector& GetNumPhiDas() const;
            TIGL_EXPORT CCPACSStringVector& GetNumPhiDas();
            
            TIGL_EXPORT const CCPACSStringVector& GetNumRDas() const;
            TIGL_EXPORT CCPACSStringVector& GetNumRDas();
            
            TIGL_EXPORT const CCPACSStringVector& GetNumBetaDas() const;
            TIGL_EXPORT CCPACSStringVector& GetNumBetaDas();
            
            TIGL_EXPORT const CCPACSStringVector& GetNumPhiDasRed() const;
            TIGL_EXPORT CCPACSStringVector& GetNumPhiDasRed();
            
            TIGL_EXPORT const CCPACSStringVector& GetNumBetaDasRed() const;
            TIGL_EXPORT CCPACSStringVector& GetNumBetaDasRed();
            
            TIGL_EXPORT const CCPACSStringVector& GetNumRDrp() const;
            TIGL_EXPORT CCPACSStringVector& GetNumRDrp();
            
            TIGL_EXPORT const CCPACSStringVector& GetNumBetaDrp() const;
            TIGL_EXPORT CCPACSStringVector& GetNumBetaDrp();
            
            TIGL_EXPORT const CCPACSStringVector& GetNumPFas() const;
            TIGL_EXPORT CCPACSStringVector& GetNumPFas();
            
            TIGL_EXPORT const CCPACSStringVector& GetNumRFas() const;
            TIGL_EXPORT CCPACSStringVector& GetNumRFas();
            
            TIGL_EXPORT const CCPACSStringVector& GetNumPhiFas() const;
            TIGL_EXPORT CCPACSStringVector& GetNumPhiFas();
            
            TIGL_EXPORT const CCPACSStringVector& GetNumBetaFas() const;
            TIGL_EXPORT CCPACSStringVector& GetNumBetaFas();
            
            TIGL_EXPORT const CCPACSStringVector& GetNumPFrp() const;
            TIGL_EXPORT CCPACSStringVector& GetNumPFrp();
            
            TIGL_EXPORT const CCPACSStringVector& GetNumRFrp() const;
            TIGL_EXPORT CCPACSStringVector& GetNumRFrp();
            
            TIGL_EXPORT const CCPACSStringVector& GetNumPhiFrp() const;
            TIGL_EXPORT CCPACSStringVector& GetNumPhiFrp();
            
            TIGL_EXPORT const CCPACSStringVector& GetNumBetaFrp() const;
            TIGL_EXPORT CCPACSStringVector& GetNumBetaFrp();
            
            TIGL_EXPORT const CCPACSStringVector& GetDenLat() const;
            TIGL_EXPORT CCPACSStringVector& GetDenLat();
            
            TIGL_EXPORT const CCPACSStringVector& GetDenLatRed() const;
            TIGL_EXPORT CCPACSStringVector& GetDenLatRed();
            
        protected:
            CCPACSStringVector m_numPhiDas;
            CCPACSStringVector m_numRDas;
            CCPACSStringVector m_numBetaDas;
            CCPACSStringVector m_numPhiDasRed;
            CCPACSStringVector m_numBetaDasRed;
            CCPACSStringVector m_numRDrp;
            CCPACSStringVector m_numBetaDrp;
            CCPACSStringVector m_numPFas;
            CCPACSStringVector m_numRFas;
            CCPACSStringVector m_numPhiFas;
            CCPACSStringVector m_numBetaFas;
            CCPACSStringVector m_numPFrp;
            CCPACSStringVector m_numRFrp;
            CCPACSStringVector m_numPhiFrp;
            CCPACSStringVector m_numBetaFrp;
            CCPACSStringVector m_denLat;
            CCPACSStringVector m_denLatRed;
            
        private:
            #ifdef HAVE_CPP11
            CPACSFqLateral(const CPACSFqLateral&) = delete;
            CPACSFqLateral& operator=(const CPACSFqLateral&) = delete;
            
            CPACSFqLateral(CPACSFqLateral&&) = delete;
            CPACSFqLateral& operator=(CPACSFqLateral&&) = delete;
            #else
            CPACSFqLateral(const CPACSFqLateral&);
            CPACSFqLateral& operator=(const CPACSFqLateral&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSFqLateral = generated::CPACSFqLateral;
    #else
    typedef generated::CPACSFqLateral CCPACSFqLateral;
    #endif
}
