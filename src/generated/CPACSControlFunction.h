// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include "tigl_internal.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSControlFunctions
        
        // generated from /xsd:schema/xsd:complexType[159]
        class CPACSControlFunction
        {
        public:
            TIGL_EXPORT CPACSControlFunction();
            TIGL_EXPORT virtual ~CPACSControlFunction();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const std::string& GetUID() const;
            TIGL_EXPORT void SetUID(const std::string& value);
            
            TIGL_EXPORT const std::string& GetControlDistributorUID() const;
            TIGL_EXPORT void SetControlDistributorUID(const std::string& value);
            
            TIGL_EXPORT const double& GetKRate() const;
            TIGL_EXPORT void SetKRate(const double& value);
            
            TIGL_EXPORT const double& GetKRateI() const;
            TIGL_EXPORT void SetKRateI(const double& value);
            
            TIGL_EXPORT const double& GetKAngle() const;
            TIGL_EXPORT void SetKAngle(const double& value);
            
            TIGL_EXPORT const double& GetKAngleI() const;
            TIGL_EXPORT void SetKAngleI(const double& value);
            
            TIGL_EXPORT const double& GetKAngleRateF1() const;
            TIGL_EXPORT void SetKAngleRateF1(const double& value);
            
            TIGL_EXPORT const double& GetKAngleRateF2() const;
            TIGL_EXPORT void SetKAngleRateF2(const double& value);
            
        protected:
            std::string m_uID;
            std::string m_controlDistributorUID;
            double      m_kRate;
            double      m_kRateI;
            double      m_kAngle;
            double      m_kAngleI;
            double      m_kAngleRateF1;
            double      m_kAngleRateF2;
            
        private:
            #ifdef HAVE_CPP11
            CPACSControlFunction(const CPACSControlFunction&) = delete;
            CPACSControlFunction& operator=(const CPACSControlFunction&) = delete;
            
            CPACSControlFunction(CPACSControlFunction&&) = delete;
            CPACSControlFunction& operator=(CPACSControlFunction&&) = delete;
            #else
            CPACSControlFunction(const CPACSControlFunction&);
            CPACSControlFunction& operator=(const CPACSControlFunction&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSControlFunction = generated::CPACSControlFunction;
    #else
    typedef generated::CPACSControlFunction CCPACSControlFunction;
    #endif
}
