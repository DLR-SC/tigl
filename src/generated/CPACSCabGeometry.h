// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include <CCPACSStringVector.h>
#include <CCPACSStringVector.h>
#include "CPACSStringArrayBase.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSDeck
        
        // generated from /xsd:schema/xsd:complexType[101]
        class CPACSCabGeometry
        {
        public:
            TIGL_EXPORT CPACSCabGeometry();
            TIGL_EXPORT virtual ~CPACSCabGeometry();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const std::string& GetUID() const;
            TIGL_EXPORT void SetUID(const std::string& value);
            
            TIGL_EXPORT const std::string& GetName() const;
            TIGL_EXPORT void SetName(const std::string& value);
            
            TIGL_EXPORT bool HasDescription() const;
            TIGL_EXPORT const std::string& GetDescription() const;
            TIGL_EXPORT void SetDescription(const std::string& value);
            
            TIGL_EXPORT const CCPACSStringVector& GetX() const;
            TIGL_EXPORT CCPACSStringVector& GetX();
            
            TIGL_EXPORT const CCPACSStringVector& GetZ() const;
            TIGL_EXPORT CCPACSStringVector& GetZ();
            
            TIGL_EXPORT const CPACSStringArrayBase& GetY() const;
            TIGL_EXPORT CPACSStringArrayBase& GetY();
            
        protected:
            std::string                  m_uID;
            std::string                  m_name;
            boost::optional<std::string> m_description;
            CCPACSStringVector           m_x;
            CCPACSStringVector           m_z;
            CPACSStringArrayBase         m_y;
            
        private:
            #ifdef HAVE_CPP11
            CPACSCabGeometry(const CPACSCabGeometry&) = delete;
            CPACSCabGeometry& operator=(const CPACSCabGeometry&) = delete;
            
            CPACSCabGeometry(CPACSCabGeometry&&) = delete;
            CPACSCabGeometry& operator=(CPACSCabGeometry&&) = delete;
            #else
            CPACSCabGeometry(const CPACSCabGeometry&);
            CPACSCabGeometry& operator=(const CPACSCabGeometry&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSCabGeometry = generated::CPACSCabGeometry;
    #else
    typedef generated::CPACSCabGeometry CCPACSCabGeometry;
    #endif
}
