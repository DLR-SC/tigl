// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "TixiHelper.h"
#include "CTiglLogging.h"
#include "CTiglError.h"
#include "CPACSGenericComponentCoefficients.h"

namespace tigl
{
    namespace generated
    {
        CPACSGenericComponentCoefficients::CPACSGenericComponentCoefficients(){}
        CPACSGenericComponentCoefficients::~CPACSGenericComponentCoefficients() {}
        
        void CPACSGenericComponentCoefficients::ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath)
        {
            // read element parentUID
            if (tixihelper::TixiCheckElement(tixiHandle, xpath + "/parentUID")) {
                m_parentUID = tixihelper::TixiGetElement<std::string>(tixiHandle, xpath + "/parentUID");
            }
            else {
                LOG(ERROR) << "Required element parentUID is missing";
            }
            
            // read element coefficients
            if (tixihelper::TixiCheckElement(tixiHandle, xpath + "/coefficients")) {
                m_coefficients.ReadCPACS(tixiHandle, xpath + "/coefficients");
            }
            else {
                LOG(ERROR) << "Required element coefficients is missing";
            }
            
        }
        
        void CPACSGenericComponentCoefficients::WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const
        {
            // write element parentUID
            tixihelper::TixiCreateElementIfNotExists(tixiHandle, xpath + "/parentUID");
            tixihelper::TixiSaveElement(tixiHandle, xpath + "/parentUID", m_parentUID);
            
            // write element coefficients
            tixihelper::TixiCreateElementIfNotExists(tixiHandle, xpath + "/coefficients");
            m_coefficients.WriteCPACS(tixiHandle, xpath + "/coefficients");
            
        }
        
        const std::string& CPACSGenericComponentCoefficients::GetParentUID() const
        {
            return m_parentUID;
        }
        
        void CPACSGenericComponentCoefficients::SetParentUID(const std::string& value)
        {
            m_parentUID = value;
        }
        
        const CPACSCoefficients& CPACSGenericComponentCoefficients::GetCoefficients() const
        {
            return m_coefficients;
        }
        
        CPACSCoefficients& CPACSGenericComponentCoefficients::GetCoefficients()
        {
            return m_coefficients;
        }
        
    }
}
