// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <boost/optional.hpp>
#include <boost/utility/in_place_factory.hpp>
#include <CCPACSTransformation.h>
#include <string>
#include <TiglSymmetryAxis.h>
#include <tixi.h>
#include "CPACSLinkToFile.h"
#include "CTiglUIDObject.h"
#include "ITiglUIDRefObject.h"
#include "tigl_internal.h"

namespace tigl
{
class CTiglUIDManager;
class CCPACSExternalObjects;

namespace generated
{
    // This class is used in:
    // CPACSGenericGeometryComponents

    /// @brief genericGeometricComponentType
    /// 
    /// In some cases additional geometric components need to
    /// be linked to a CPACS, but these components are not yet handled by
    /// CPACS explicitly. For example, a belly fairing and/or external
    /// tanks.
    /// A generic geometric component may be applied to include
    /// such a geometry from an external file (preferably STEP) in the
    /// context of the overall aircraft.
    /// @see geomBlock
    /// 
    class CPACSGenericGeometricComponent : public CTiglReqUIDObject, public ITiglUIDRefObject
    {
    public:
        TIGL_EXPORT CPACSGenericGeometricComponent(CCPACSExternalObjects* parent, CTiglUIDManager* uidMgr);

        TIGL_EXPORT virtual ~CPACSGenericGeometricComponent();

        TIGL_EXPORT CCPACSExternalObjects* GetParent();

        TIGL_EXPORT const CCPACSExternalObjects* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT CTiglUIDManager& GetUIDManager();
        TIGL_EXPORT const CTiglUIDManager& GetUIDManager() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const std::string& GetUID() const;
        TIGL_EXPORT virtual void SetUID(const std::string& value);

        TIGL_EXPORT virtual const boost::optional<TiglSymmetryAxis>& GetSymmetry() const;
        TIGL_EXPORT virtual void SetSymmetry(const boost::optional<TiglSymmetryAxis>& value);

        TIGL_EXPORT virtual const std::string& GetName() const;
        TIGL_EXPORT virtual void SetName(const std::string& value);

        TIGL_EXPORT virtual const boost::optional<std::string>& GetDescription() const;
        TIGL_EXPORT virtual void SetDescription(const boost::optional<std::string>& value);

        TIGL_EXPORT virtual const boost::optional<std::string>& GetParentUID() const;
        TIGL_EXPORT virtual void SetParentUID(const boost::optional<std::string>& value);

        TIGL_EXPORT virtual const CCPACSTransformation& GetTransformation() const;
        TIGL_EXPORT virtual CCPACSTransformation& GetTransformation();

        TIGL_EXPORT virtual const CPACSLinkToFile& GetLinkToFile() const;
        TIGL_EXPORT virtual CPACSLinkToFile& GetLinkToFile();

    protected:
        CCPACSExternalObjects* m_parent;

        CTiglUIDManager* m_uidMgr;

        std::string                       m_uID;

        boost::optional<TiglSymmetryAxis> m_symmetry;

        /// Name of genericGeometricComponent
        std::string                       m_name;

        /// Description of genericGeometricComponent
        boost::optional<std::string>      m_description;

        /// UID of part to which the component is mounted
        /// (if any)
        boost::optional<std::string>      m_parentUID;

        CCPACSTransformation              m_transformation;

        CPACSLinkToFile                   m_linkToFile;

    private:
        TIGL_EXPORT const CTiglUIDObject* GetNextUIDObject() const final;
        TIGL_EXPORT void NotifyUIDChange(const std::string& oldUid, const std::string& newUid) final;

        CPACSGenericGeometricComponent(const CPACSGenericGeometricComponent&) = delete;
        CPACSGenericGeometricComponent& operator=(const CPACSGenericGeometricComponent&) = delete;

        CPACSGenericGeometricComponent(CPACSGenericGeometricComponent&&) = delete;
        CPACSGenericGeometricComponent& operator=(CPACSGenericGeometricComponent&&) = delete;
    };
} // namespace generated

// CPACSGenericGeometricComponent is customized, use type CCPACSExternalObject directly
} // namespace tigl
