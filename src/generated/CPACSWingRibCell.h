// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include "tigl_internal.h"
#include "CPACSPointX.h"
#include <CCPACSMaterial.h>
#include "CPACSCap.h"
#include "CPACSCap.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSWingRibCrossSection
        
        // generated from /xsd:schema/xsd:complexType[911]
        class CPACSWingRibCell
        {
        public:
            TIGL_EXPORT CPACSWingRibCell();
            TIGL_EXPORT virtual ~CPACSWingRibCell();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const std::string& GetUID() const;
            TIGL_EXPORT void SetUID(const std::string& value);
            
            TIGL_EXPORT const std::string& GetFromRib() const;
            TIGL_EXPORT void SetFromRib(const std::string& value);
            
            TIGL_EXPORT const std::string& GetToRib() const;
            TIGL_EXPORT void SetToRib(const std::string& value);
            
            TIGL_EXPORT const CPACSPointX& GetRibRotation() const;
            TIGL_EXPORT CPACSPointX& GetRibRotation();
            
            TIGL_EXPORT const CCPACSMaterial& GetMaterial() const;
            TIGL_EXPORT CCPACSMaterial& GetMaterial();
            
            TIGL_EXPORT const CPACSCap& GetUpperCap() const;
            TIGL_EXPORT CPACSCap& GetUpperCap();
            
            TIGL_EXPORT const CPACSCap& GetLowerCap() const;
            TIGL_EXPORT CPACSCap& GetLowerCap();
            
        protected:
            std::string    m_uID;
            std::string    m_fromRib;
            std::string    m_toRib;
            CPACSPointX    m_ribRotation;
            CCPACSMaterial m_material;
            CPACSCap       m_upperCap;
            CPACSCap       m_lowerCap;
            
        private:
            #ifdef HAVE_CPP11
            CPACSWingRibCell(const CPACSWingRibCell&) = delete;
            CPACSWingRibCell& operator=(const CPACSWingRibCell&) = delete;
            
            CPACSWingRibCell(CPACSWingRibCell&&) = delete;
            CPACSWingRibCell& operator=(CPACSWingRibCell&&) = delete;
            #else
            CPACSWingRibCell(const CPACSWingRibCell&);
            CPACSWingRibCell& operator=(const CPACSWingRibCell&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef HAVE_CPP11
    using CCPACSWingRibCell = generated::CPACSWingRibCell;
    #else
    typedef generated::CPACSWingRibCell CCPACSWingRibCell;
    #endif
}
