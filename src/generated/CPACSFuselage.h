// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <boost/optional.hpp>
#include <boost/utility/in_place_factory.hpp>
#include <CCPACSFuselageSections.h>
#include <CCPACSFuselageSegments.h>
#include <CCPACSPositionings.h>
#include <CCPACSTransformation.h>
#include <string>
#include <TiglSymmetryAxis.h>
#include <tixi.h>
#include "CPACSFuselageCutOuts.h"
#include "CreateIfNotExists.h"
#include "tigl_internal.h"

namespace tigl
{
    class CTiglUIDManager;
    class CCPACSFuselages;
    
    namespace generated
    {
        // This class is used in:
        // CPACSFuselages
        
        // generated from /xsd:schema/xsd:complexType[374]
        class CPACSFuselage
        {
        public:
            TIGL_EXPORT CPACSFuselage(CCPACSFuselages* parent, CTiglUIDManager* uidMgr);
            
            TIGL_EXPORT virtual ~CPACSFuselage();
            
            TIGL_EXPORT CCPACSFuselages* GetParent() const;
            
            TIGL_EXPORT CTiglUIDManager& GetUIDManager();
            TIGL_EXPORT const CTiglUIDManager& GetUIDManager() const;
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT virtual const std::string& GetUID() const;
            TIGL_EXPORT virtual void SetUID(const std::string& value);
            
            TIGL_EXPORT virtual const boost::optional<TiglSymmetryAxis>& GetSymmetry() const;
            TIGL_EXPORT virtual void SetSymmetry(const TiglSymmetryAxis& value);
            TIGL_EXPORT virtual void SetSymmetry(const boost::optional<TiglSymmetryAxis>& value);
            
            TIGL_EXPORT virtual const std::string& GetName() const;
            TIGL_EXPORT virtual void SetName(const std::string& value);
            
            TIGL_EXPORT virtual const boost::optional<std::string>& GetDescription() const;
            TIGL_EXPORT virtual void SetDescription(const std::string& value);
            TIGL_EXPORT virtual void SetDescription(const boost::optional<std::string>& value);
            
            TIGL_EXPORT virtual const boost::optional<std::string>& GetParentUID() const;
            TIGL_EXPORT virtual void SetParentUID(const std::string& value);
            TIGL_EXPORT virtual void SetParentUID(const boost::optional<std::string>& value);
            
            TIGL_EXPORT virtual const CCPACSTransformation& GetTransformation() const;
            TIGL_EXPORT virtual CCPACSTransformation& GetTransformation();
            
            TIGL_EXPORT virtual const CCPACSFuselageSections& GetSections() const;
            TIGL_EXPORT virtual CCPACSFuselageSections& GetSections();
            
            TIGL_EXPORT virtual const CCPACSPositionings& GetPositionings() const;
            TIGL_EXPORT virtual CCPACSPositionings& GetPositionings();
            
            TIGL_EXPORT virtual const CCPACSFuselageSegments& GetSegments() const;
            TIGL_EXPORT virtual CCPACSFuselageSegments& GetSegments();
            
            TIGL_EXPORT virtual const boost::optional<CPACSFuselageCutOuts>& GetCutOuts() const;
            TIGL_EXPORT virtual boost::optional<CPACSFuselageCutOuts>& GetCutOuts();
            
            TIGL_EXPORT virtual CPACSFuselageCutOuts& GetCutOuts(CreateIfNotExistsTag);
            TIGL_EXPORT virtual void RemoveCutOuts();
            
        protected:
            CCPACSFuselages* m_parent;
            
            CTiglUIDManager* m_uidMgr;
            
            std::string                           m_uID;
            boost::optional<TiglSymmetryAxis>     m_symmetry;
            std::string                           m_name;
            boost::optional<std::string>          m_description;
            boost::optional<std::string>          m_parentUID;
            CCPACSTransformation                  m_transformation;
            CCPACSFuselageSections                m_sections;
            CCPACSPositionings                    m_positionings;
            CCPACSFuselageSegments                m_segments;
            boost::optional<CPACSFuselageCutOuts> m_cutOuts;
            
        private:
            #ifdef HAVE_CPP11
            CPACSFuselage(const CPACSFuselage&) = delete;
            CPACSFuselage& operator=(const CPACSFuselage&) = delete;
            
            CPACSFuselage(CPACSFuselage&&) = delete;
            CPACSFuselage& operator=(CPACSFuselage&&) = delete;
            #else
            CPACSFuselage(const CPACSFuselage&);
            CPACSFuselage& operator=(const CPACSFuselage&);
            #endif
        };
    }
    
    // CPACSFuselage is customized, use type CCPACSFuselage directly
}
