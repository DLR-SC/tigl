// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include <CCPACSWingRibCrossSection.h>
#include <CCPACSWingRibsPositioning.h>
#include "CPACSWingRibExplicitPositioning.h"

namespace tigl
{
    class CCPACSWingRibsDefinitions;
    
    namespace generated
    {
        // This class is used in:
        // CPACSWingRibsDefinitions
        
        // generated from /xsd:schema/xsd:complexType[914]
        class CPACSWingRibsDefinition
        {
        public:
            TIGL_EXPORT CPACSWingRibsDefinition(CCPACSWingRibsDefinitions* parent);
            
            TIGL_EXPORT virtual ~CPACSWingRibsDefinition();
            
            TIGL_EXPORT CCPACSWingRibsDefinitions* GetParent() const;
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const std::string& GetUID() const;
            TIGL_EXPORT void SetUID(const std::string& value);
            
            TIGL_EXPORT const std::string& GetName() const;
            TIGL_EXPORT void SetName(const std::string& value);
            
            TIGL_EXPORT bool HasDescription() const;
            TIGL_EXPORT const std::string& GetDescription() const;
            TIGL_EXPORT void SetDescription(const std::string& value);
            
            TIGL_EXPORT const CCPACSWingRibCrossSection& GetRibCrossSection() const;
            TIGL_EXPORT CCPACSWingRibCrossSection& GetRibCrossSection();
            
            TIGL_EXPORT bool HasRibsPositioning_choice1() const;
            TIGL_EXPORT const CCPACSWingRibsPositioning& GetRibsPositioning_choice1() const;
            TIGL_EXPORT CCPACSWingRibsPositioning& GetRibsPositioning_choice1();
            
            TIGL_EXPORT bool HasRibExplicitPositioning_choice2() const;
            TIGL_EXPORT const CPACSWingRibExplicitPositioning& GetRibExplicitPositioning_choice2() const;
            TIGL_EXPORT CPACSWingRibExplicitPositioning& GetRibExplicitPositioning_choice2();
            
        protected:
            CCPACSWingRibsDefinitions* m_parent;
            
            std::string                                      m_uID;
            std::string                                      m_name;
            boost::optional<std::string>                     m_description;
            CCPACSWingRibCrossSection                        m_ribCrossSection;
            boost::optional<CCPACSWingRibsPositioning>       m_ribsPositioning_choice1;
            boost::optional<CPACSWingRibExplicitPositioning> m_ribExplicitPositioning_choice2;
            
        private:
            #ifdef HAVE_CPP11
            CPACSWingRibsDefinition(const CPACSWingRibsDefinition&) = delete;
            CPACSWingRibsDefinition& operator=(const CPACSWingRibsDefinition&) = delete;
            
            CPACSWingRibsDefinition(CPACSWingRibsDefinition&&) = delete;
            CPACSWingRibsDefinition& operator=(CPACSWingRibsDefinition&&) = delete;
            #else
            CPACSWingRibsDefinition(const CPACSWingRibsDefinition&);
            CPACSWingRibsDefinition& operator=(const CPACSWingRibsDefinition&);
            #endif
        };
    }
    
    // This type is customized, use type CCPACSWingRibsDefinition
}
