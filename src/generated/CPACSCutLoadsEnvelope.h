// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <vector>
#include "UniquePtr.h"
#include "tigl_internal.h"

namespace tigl
{
    namespace generated
    {
        class CPACSComponentCutLoadsEnvelope;
        class CPACSComponentCutLoadsEnvelope;
        
        // This class is used in:
        // CPACSLoadsEnvelope
        
        // generated from /xsd:schema/xsd:complexType[241]
        class CPACSCutLoadsEnvelope
        {
        public:
            TIGL_EXPORT CPACSCutLoadsEnvelope();
            TIGL_EXPORT virtual ~CPACSCutLoadsEnvelope();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const std::vector<unique_ptr<CPACSComponentCutLoadsEnvelope>>& GetFuselageCutLoadsEnvelope() const;
            TIGL_EXPORT std::vector<unique_ptr<CPACSComponentCutLoadsEnvelope>>& GetFuselageCutLoadsEnvelope();
            
            TIGL_EXPORT const std::vector<unique_ptr<CPACSComponentCutLoadsEnvelope>>& GetWingCutLoadsEnvelope() const;
            TIGL_EXPORT std::vector<unique_ptr<CPACSComponentCutLoadsEnvelope>>& GetWingCutLoadsEnvelope();
            
        protected:
            std::vector<unique_ptr<CPACSComponentCutLoadsEnvelope>> m_fuselageCutLoadsEnvelope;
            std::vector<unique_ptr<CPACSComponentCutLoadsEnvelope>> m_wingCutLoadsEnvelope;
            
        private:
            #ifdef HAVE_CPP11
            CPACSCutLoadsEnvelope(const CPACSCutLoadsEnvelope&) = delete;
            CPACSCutLoadsEnvelope& operator=(const CPACSCutLoadsEnvelope&) = delete;
            
            CPACSCutLoadsEnvelope(CPACSCutLoadsEnvelope&&) = delete;
            CPACSCutLoadsEnvelope& operator=(CPACSCutLoadsEnvelope&&) = delete;
            #else
            CPACSCutLoadsEnvelope(const CPACSCutLoadsEnvelope&);
            CPACSCutLoadsEnvelope& operator=(const CPACSCutLoadsEnvelope&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSCutLoadsEnvelope = generated::CPACSCutLoadsEnvelope;
    #else
    typedef generated::CPACSCutLoadsEnvelope CCPACSCutLoadsEnvelope;
    #endif
    
    using generated::CPACSComponentCutLoadsEnvelope;
    using generated::CPACSComponentCutLoadsEnvelope;
}
