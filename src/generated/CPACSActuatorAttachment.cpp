// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "TixiHelper.h"
#include "CTiglLogging.h"
#include "CTiglError.h"
#include "CPACSActuatorAttachment.h"

namespace tigl
{
    namespace generated
    {
        CPACSActuatorAttachment::CPACSActuatorAttachment(){}
        CPACSActuatorAttachment::~CPACSActuatorAttachment() {}
        
        void CPACSActuatorAttachment::ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath)
        {
            // read element etaControlSurface
            if (tixihelper::TixiCheckElement(tixiHandle, xpath + "/etaControlSurface")) {
                m_etaControlSurface = tixihelper::TixiGetElement<double>(tixiHandle, xpath + "/etaControlSurface");
            }
            else {
                LOG(ERROR) << "Required element etaControlSurface is missing";
            }
            
            // read element parentAttachment
            if (tixihelper::TixiCheckElement(tixiHandle, xpath + "/parentAttachment")) {
                m_parentAttachment.ReadCPACS(tixiHandle, xpath + "/parentAttachment");
            }
            else {
                LOG(ERROR) << "Required element parentAttachment is missing";
            }
            
            // read element controlSurfaceAttachment
            if (tixihelper::TixiCheckElement(tixiHandle, xpath + "/controlSurfaceAttachment")) {
                m_controlSurfaceAttachment.ReadCPACS(tixiHandle, xpath + "/controlSurfaceAttachment");
            }
            else {
                LOG(ERROR) << "Required element controlSurfaceAttachment is missing";
            }
            
        }
        
        void CPACSActuatorAttachment::WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const
        {
            // write element etaControlSurface
            tixihelper::TixiCreateElementIfNotExists(tixiHandle, xpath + "/etaControlSurface");
            tixihelper::TixiSaveElement(tixiHandle, xpath + "/etaControlSurface", m_etaControlSurface);
            
            // write element parentAttachment
            tixihelper::TixiCreateElementIfNotExists(tixiHandle, xpath + "/parentAttachment");
            m_parentAttachment.WriteCPACS(tixiHandle, xpath + "/parentAttachment");
            
            // write element controlSurfaceAttachment
            tixihelper::TixiCreateElementIfNotExists(tixiHandle, xpath + "/controlSurfaceAttachment");
            m_controlSurfaceAttachment.WriteCPACS(tixiHandle, xpath + "/controlSurfaceAttachment");
            
        }
        
        const double& CPACSActuatorAttachment::GetEtaControlSurface() const
        {
            return m_etaControlSurface;
        }
        
        void CPACSActuatorAttachment::SetEtaControlSurface(const double& value)
        {
            m_etaControlSurface = value;
        }
        
        const CPACSActuatorParentAttachment& CPACSActuatorAttachment::GetParentAttachment() const
        {
            return m_parentAttachment;
        }
        
        CPACSActuatorParentAttachment& CPACSActuatorAttachment::GetParentAttachment()
        {
            return m_parentAttachment;
        }
        
        const CPACSActuatorControlSurfaceAttachment& CPACSActuatorAttachment::GetControlSurfaceAttachment() const
        {
            return m_controlSurfaceAttachment;
        }
        
        CPACSActuatorControlSurfaceAttachment& CPACSActuatorAttachment::GetControlSurfaceAttachment()
        {
            return m_controlSurfaceAttachment;
        }
        
    }
}
