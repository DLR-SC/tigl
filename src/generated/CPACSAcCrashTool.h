// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSTool.h"
#include "CPACSAcCrashTool_analysisType.h"
#include "CPACSCrashModelDefinition.h"
#include "CPACSCrashJobDefinition.h"
#include "CPACSCrashJobControl.h"
#include "CPACSCrashElsizeDefs.h"
#include "CPACSBkMassCases.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSToolspecific
        
        // generated from /xsd:schema/xsd:complexType[3]
        class CPACSAcCrashTool
        {
        public:
            TIGL_EXPORT CPACSAcCrashTool();
            TIGL_EXPORT virtual ~CPACSAcCrashTool();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const CPACSTool& GetTool() const;
            TIGL_EXPORT CPACSTool& GetTool();
            
            TIGL_EXPORT const CPACSAcCrashTool_analysisType& GetAnalysisType() const;
            TIGL_EXPORT CPACSAcCrashTool_analysisType& GetAnalysisType();
            
            TIGL_EXPORT const CPACSCrashModelDefinition& GetModelDefinitions() const;
            TIGL_EXPORT CPACSCrashModelDefinition& GetModelDefinitions();
            
            TIGL_EXPORT const CPACSCrashJobDefinition& GetCrashJobDefinition() const;
            TIGL_EXPORT CPACSCrashJobDefinition& GetCrashJobDefinition();
            
            TIGL_EXPORT const CPACSCrashJobControl& GetCrashJobControl() const;
            TIGL_EXPORT CPACSCrashJobControl& GetCrashJobControl();
            
            TIGL_EXPORT bool HasCrashElsizeDefinitions() const;
            TIGL_EXPORT const CPACSCrashElsizeDefs& GetCrashElsizeDefinitions() const;
            TIGL_EXPORT CPACSCrashElsizeDefs& GetCrashElsizeDefinitions();
            
            TIGL_EXPORT bool HasBkMassCaseDefinitions() const;
            TIGL_EXPORT const CPACSBkMassCases& GetBkMassCaseDefinitions() const;
            TIGL_EXPORT CPACSBkMassCases& GetBkMassCaseDefinitions();
            
        protected:
            CPACSTool                             m_tool;
            CPACSAcCrashTool_analysisType         m_analysisType;
            CPACSCrashModelDefinition             m_modelDefinitions;
            CPACSCrashJobDefinition               m_crashJobDefinition;
            CPACSCrashJobControl                  m_crashJobControl;
            boost::optional<CPACSCrashElsizeDefs> m_crashElsizeDefinitions;
            boost::optional<CPACSBkMassCases>     m_bkMassCaseDefinitions;
            
        private:
            #ifdef HAVE_CPP11
            CPACSAcCrashTool(const CPACSAcCrashTool&) = delete;
            CPACSAcCrashTool& operator=(const CPACSAcCrashTool&) = delete;
            
            CPACSAcCrashTool(CPACSAcCrashTool&&) = delete;
            CPACSAcCrashTool& operator=(CPACSAcCrashTool&&) = delete;
            #else
            CPACSAcCrashTool(const CPACSAcCrashTool&);
            CPACSAcCrashTool& operator=(const CPACSAcCrashTool&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSAcCrashTool = generated::CPACSAcCrashTool;
    #else
    typedef generated::CPACSAcCrashTool CCPACSAcCrashTool;
    #endif
}
