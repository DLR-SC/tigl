// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include <CCPACSStringVector.h>
#include "CPACSStringArrayBase.h"
#include "CPACSStringArrayBase.h"
#include "CPACSStringArrayBase.h"
#include "CPACSStringArrayBase.h"
#include "CPACSStringArrayBase.h"
#include "CPACSStringArrayBase.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSAeroLandingGears
        
        // generated from /xsd:schema/xsd:complexType[31]
        class CPACSAeroLandingGear
        {
        public:
            TIGL_EXPORT CPACSAeroLandingGear();
            TIGL_EXPORT virtual ~CPACSAeroLandingGear();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const std::string& GetLandingGearUID() const;
            TIGL_EXPORT void SetLandingGearUID(const std::string& value);
            
            TIGL_EXPORT const CCPACSStringVector& GetRelDeflection() const;
            TIGL_EXPORT CCPACSStringVector& GetRelDeflection();
            
            TIGL_EXPORT bool HasDcfx() const;
            TIGL_EXPORT const CPACSStringArrayBase& GetDcfx() const;
            TIGL_EXPORT CPACSStringArrayBase& GetDcfx();
            
            TIGL_EXPORT bool HasDcfy() const;
            TIGL_EXPORT const CPACSStringArrayBase& GetDcfy() const;
            TIGL_EXPORT CPACSStringArrayBase& GetDcfy();
            
            TIGL_EXPORT bool HasDcfz() const;
            TIGL_EXPORT const CPACSStringArrayBase& GetDcfz() const;
            TIGL_EXPORT CPACSStringArrayBase& GetDcfz();
            
            TIGL_EXPORT bool HasDcmx() const;
            TIGL_EXPORT const CPACSStringArrayBase& GetDcmx() const;
            TIGL_EXPORT CPACSStringArrayBase& GetDcmx();
            
            TIGL_EXPORT bool HasDcmy() const;
            TIGL_EXPORT const CPACSStringArrayBase& GetDcmy() const;
            TIGL_EXPORT CPACSStringArrayBase& GetDcmy();
            
            TIGL_EXPORT bool HasDcmz() const;
            TIGL_EXPORT const CPACSStringArrayBase& GetDcmz() const;
            TIGL_EXPORT CPACSStringArrayBase& GetDcmz();
            
        protected:
            std::string                           m_landingGearUID;
            CCPACSStringVector                    m_relDeflection;
            boost::optional<CPACSStringArrayBase> m_dcfx;
            boost::optional<CPACSStringArrayBase> m_dcfy;
            boost::optional<CPACSStringArrayBase> m_dcfz;
            boost::optional<CPACSStringArrayBase> m_dcmx;
            boost::optional<CPACSStringArrayBase> m_dcmy;
            boost::optional<CPACSStringArrayBase> m_dcmz;
            
        private:
            #ifdef HAVE_CPP11
            CPACSAeroLandingGear(const CPACSAeroLandingGear&) = delete;
            CPACSAeroLandingGear& operator=(const CPACSAeroLandingGear&) = delete;
            
            CPACSAeroLandingGear(CPACSAeroLandingGear&&) = delete;
            CPACSAeroLandingGear& operator=(CPACSAeroLandingGear&&) = delete;
            #else
            CPACSAeroLandingGear(const CPACSAeroLandingGear&);
            CPACSAeroLandingGear& operator=(const CPACSAeroLandingGear&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSAeroLandingGear = generated::CPACSAeroLandingGear;
    #else
    typedef generated::CPACSAeroLandingGear CCPACSAeroLandingGear;
    #endif
}
