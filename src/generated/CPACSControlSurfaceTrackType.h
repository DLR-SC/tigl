// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSControlSurfaceTrackType_trackType.h"
#include "CPACSControlSurfaceTrackType_trackSubType.h"
#include "CPACSTrackActuator.h"
#include "CPACSTrackStructure.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSControlSurfaceTracks
        
        // generated from /xsd:schema/xsd:complexType[190]
        class CPACSControlSurfaceTrackType
        {
        public:
            TIGL_EXPORT CPACSControlSurfaceTrackType();
            TIGL_EXPORT virtual ~CPACSControlSurfaceTrackType();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const std::string& GetUID() const;
            TIGL_EXPORT void SetUID(const std::string& value);
            
            TIGL_EXPORT const double& GetEta() const;
            TIGL_EXPORT void SetEta(const double& value);
            
            TIGL_EXPORT const CPACSControlSurfaceTrackType_trackType& GetTrackType() const;
            TIGL_EXPORT CPACSControlSurfaceTrackType_trackType& GetTrackType();
            
            TIGL_EXPORT bool HasTrackSubType() const;
            TIGL_EXPORT const CPACSControlSurfaceTrackType_trackSubType& GetTrackSubType() const;
            TIGL_EXPORT CPACSControlSurfaceTrackType_trackSubType& GetTrackSubType();
            
            TIGL_EXPORT bool HasActuator() const;
            TIGL_EXPORT const CPACSTrackActuator& GetActuator() const;
            TIGL_EXPORT CPACSTrackActuator& GetActuator();
            
            TIGL_EXPORT bool HasTrackStructure() const;
            TIGL_EXPORT const CPACSTrackStructure& GetTrackStructure() const;
            TIGL_EXPORT CPACSTrackStructure& GetTrackStructure();
            
        protected:
            std::string                                                m_uID;
            double                                                     m_eta;
            CPACSControlSurfaceTrackType_trackType                     m_trackType;
            boost::optional<CPACSControlSurfaceTrackType_trackSubType> m_trackSubType;
            boost::optional<CPACSTrackActuator>                        m_actuator;
            boost::optional<CPACSTrackStructure>                       m_trackStructure;
            
        private:
            #ifdef HAVE_CPP11
            CPACSControlSurfaceTrackType(const CPACSControlSurfaceTrackType&) = delete;
            CPACSControlSurfaceTrackType& operator=(const CPACSControlSurfaceTrackType&) = delete;
            
            CPACSControlSurfaceTrackType(CPACSControlSurfaceTrackType&&) = delete;
            CPACSControlSurfaceTrackType& operator=(CPACSControlSurfaceTrackType&&) = delete;
            #else
            CPACSControlSurfaceTrackType(const CPACSControlSurfaceTrackType&);
            CPACSControlSurfaceTrackType& operator=(const CPACSControlSurfaceTrackType&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSControlSurfaceTrackType = generated::CPACSControlSurfaceTrackType;
    #else
    typedef generated::CPACSControlSurfaceTrackType CCPACSControlSurfaceTrackType;
    #endif
}
