// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSDeck_type.h"
#include "CPACSCabGeometry.h"
#include "CPACSCabinAisles.h"
#include "CPACSCabinSpaces.h"
#include "CPACSCabinDoors.h"
#include "CPACSCabinSeatElements.h"
#include "CPACSCabinFloorElements.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSDecks
        
        // generated from /xsd:schema/xsd:complexType[251]
        class CPACSDeck
        {
        public:
            TIGL_EXPORT CPACSDeck();
            TIGL_EXPORT virtual ~CPACSDeck();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT bool HasUID() const;
            TIGL_EXPORT const std::string& GetUID() const;
            TIGL_EXPORT void SetUID(const std::string& value);
            
            TIGL_EXPORT const std::string& GetName() const;
            TIGL_EXPORT void SetName(const std::string& value);
            
            TIGL_EXPORT bool HasDescription() const;
            TIGL_EXPORT const std::string& GetDescription() const;
            TIGL_EXPORT void SetDescription(const std::string& value);
            
            TIGL_EXPORT bool HasParentUID() const;
            TIGL_EXPORT const std::string& GetParentUID() const;
            TIGL_EXPORT void SetParentUID(const std::string& value);
            
            TIGL_EXPORT const double& GetX0() const;
            TIGL_EXPORT void SetX0(const double& value);
            
            TIGL_EXPORT const double& GetZ0() const;
            TIGL_EXPORT void SetZ0(const double& value);
            
            TIGL_EXPORT const CPACSDeck_type& GetType() const;
            TIGL_EXPORT CPACSDeck_type& GetType();
            
            TIGL_EXPORT const CPACSCabGeometry& GetCabGeometry() const;
            TIGL_EXPORT CPACSCabGeometry& GetCabGeometry();
            
            TIGL_EXPORT bool HasAisles() const;
            TIGL_EXPORT const CPACSCabinAisles& GetAisles() const;
            TIGL_EXPORT CPACSCabinAisles& GetAisles();
            
            TIGL_EXPORT bool HasSpaces() const;
            TIGL_EXPORT const CPACSCabinSpaces& GetSpaces() const;
            TIGL_EXPORT CPACSCabinSpaces& GetSpaces();
            
            TIGL_EXPORT bool HasDoors() const;
            TIGL_EXPORT const CPACSCabinDoors& GetDoors() const;
            TIGL_EXPORT CPACSCabinDoors& GetDoors();
            
            TIGL_EXPORT bool HasSeatElements() const;
            TIGL_EXPORT const CPACSCabinSeatElements& GetSeatElements() const;
            TIGL_EXPORT CPACSCabinSeatElements& GetSeatElements();
            
            TIGL_EXPORT bool HasFloorElements() const;
            TIGL_EXPORT const CPACSCabinFloorElements& GetFloorElements() const;
            TIGL_EXPORT CPACSCabinFloorElements& GetFloorElements();
            
        protected:
            boost::optional<std::string>             m_uID;
            std::string                              m_name;
            boost::optional<std::string>             m_description;
            boost::optional<std::string>             m_parentUID;
            double                                   m_x0;
            double                                   m_z0;
            CPACSDeck_type                           m_type;
            CPACSCabGeometry                         m_cabGeometry;
            boost::optional<CPACSCabinAisles>        m_aisles;
            boost::optional<CPACSCabinSpaces>        m_spaces;
            boost::optional<CPACSCabinDoors>         m_doors;
            boost::optional<CPACSCabinSeatElements>  m_seatElements;
            boost::optional<CPACSCabinFloorElements> m_floorElements;
            
        private:
            #ifdef HAVE_CPP11
            CPACSDeck(const CPACSDeck&) = delete;
            CPACSDeck& operator=(const CPACSDeck&) = delete;
            
            CPACSDeck(CPACSDeck&&) = delete;
            CPACSDeck& operator=(CPACSDeck&&) = delete;
            #else
            CPACSDeck(const CPACSDeck&);
            CPACSDeck& operator=(const CPACSDeck&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSDeck = generated::CPACSDeck;
    #else
    typedef generated::CPACSDeck CCPACSDeck;
    #endif
}
