// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSAeroPerformanceMap.h"
#include "CPACSAeroelastics.h"
#include "CPACSDynamicAircraftModelAnalysis.h"
#include "CPACSFlightDynamicsAnalysis.h"
#include "CPACSFlyingQualities.h"
#include "CPACSFlightPerformance.h"
#include "CPACSFlightSystems.h"
#include "CPACSLandingGearPositionSafetyMargins.h"
#include "CPACSLoadAnalysis.h"
#include "CPACSMassBreakdown.h"
#include "CPACSMonetaryValuesAnalysis.h"
#include "CPACSNoiseAnalysis.h"
#include "CPACSTrajectories.h"
#include "CPACSWeightAndBalance.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSAircraftModel
        
        // generated from /xsd:schema/xsd:complexType[50]
        class CPACSAircraftAnalyses
        {
        public:
            TIGL_EXPORT CPACSAircraftAnalyses();
            TIGL_EXPORT virtual ~CPACSAircraftAnalyses();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT bool HasAeroPerformanceMap() const;
            TIGL_EXPORT const CPACSAeroPerformanceMap& GetAeroPerformanceMap() const;
            TIGL_EXPORT CPACSAeroPerformanceMap& GetAeroPerformanceMap();
            
            TIGL_EXPORT bool HasAeroelastics() const;
            TIGL_EXPORT const CPACSAeroelastics& GetAeroelastics() const;
            TIGL_EXPORT CPACSAeroelastics& GetAeroelastics();
            
            TIGL_EXPORT bool HasDynamicAircraftModel() const;
            TIGL_EXPORT const CPACSDynamicAircraftModelAnalysis& GetDynamicAircraftModel() const;
            TIGL_EXPORT CPACSDynamicAircraftModelAnalysis& GetDynamicAircraftModel();
            
            TIGL_EXPORT bool HasFlightDynamics() const;
            TIGL_EXPORT const CPACSFlightDynamicsAnalysis& GetFlightDynamics() const;
            TIGL_EXPORT CPACSFlightDynamicsAnalysis& GetFlightDynamics();
            
            TIGL_EXPORT bool HasFlyingQualities() const;
            TIGL_EXPORT const CPACSFlyingQualities& GetFlyingQualities() const;
            TIGL_EXPORT CPACSFlyingQualities& GetFlyingQualities();
            
            TIGL_EXPORT bool HasFlightPerformance() const;
            TIGL_EXPORT const CPACSFlightPerformance& GetFlightPerformance() const;
            TIGL_EXPORT CPACSFlightPerformance& GetFlightPerformance();
            
            TIGL_EXPORT bool HasFlightSystems() const;
            TIGL_EXPORT const CPACSFlightSystems& GetFlightSystems() const;
            TIGL_EXPORT CPACSFlightSystems& GetFlightSystems();
            
            TIGL_EXPORT bool HasLandingGearPositionSafetyMargins() const;
            TIGL_EXPORT const CPACSLandingGearPositionSafetyMargins& GetLandingGearPositionSafetyMargins() const;
            TIGL_EXPORT CPACSLandingGearPositionSafetyMargins& GetLandingGearPositionSafetyMargins();
            
            TIGL_EXPORT bool HasLoadAnalysis() const;
            TIGL_EXPORT const CPACSLoadAnalysis& GetLoadAnalysis() const;
            TIGL_EXPORT CPACSLoadAnalysis& GetLoadAnalysis();
            
            TIGL_EXPORT bool HasMassBreakdown() const;
            TIGL_EXPORT const CPACSMassBreakdown& GetMassBreakdown() const;
            TIGL_EXPORT CPACSMassBreakdown& GetMassBreakdown();
            
            TIGL_EXPORT bool HasMonetaryValues() const;
            TIGL_EXPORT const CPACSMonetaryValuesAnalysis& GetMonetaryValues() const;
            TIGL_EXPORT CPACSMonetaryValuesAnalysis& GetMonetaryValues();
            
            TIGL_EXPORT bool HasNoise() const;
            TIGL_EXPORT const CPACSNoiseAnalysis& GetNoise() const;
            TIGL_EXPORT CPACSNoiseAnalysis& GetNoise();
            
            TIGL_EXPORT bool HasTrajectories() const;
            TIGL_EXPORT const CPACSTrajectories& GetTrajectories() const;
            TIGL_EXPORT CPACSTrajectories& GetTrajectories();
            
            TIGL_EXPORT bool HasWeightAndBalance() const;
            TIGL_EXPORT const CPACSWeightAndBalance& GetWeightAndBalance() const;
            TIGL_EXPORT CPACSWeightAndBalance& GetWeightAndBalance();
            
            TIGL_EXPORT bool HasPaxFlow() const;
            TIGL_EXPORT const std::string& GetPaxFlow() const;
            TIGL_EXPORT void SetPaxFlow(const std::string& value);
            
        protected:
            boost::optional<CPACSAeroPerformanceMap>               m_aeroPerformanceMap;
            boost::optional<CPACSAeroelastics>                     m_aeroelastics;
            boost::optional<CPACSDynamicAircraftModelAnalysis>     m_dynamicAircraftModel;
            boost::optional<CPACSFlightDynamicsAnalysis>           m_flightDynamics;
            boost::optional<CPACSFlyingQualities>                  m_flyingQualities;
            boost::optional<CPACSFlightPerformance>                m_flightPerformance;
            boost::optional<CPACSFlightSystems>                    m_flightSystems;
            boost::optional<CPACSLandingGearPositionSafetyMargins> m_landingGearPositionSafetyMargins;
            boost::optional<CPACSLoadAnalysis>                     m_loadAnalysis;
            boost::optional<CPACSMassBreakdown>                    m_massBreakdown;
            boost::optional<CPACSMonetaryValuesAnalysis>           m_monetaryValues;
            boost::optional<CPACSNoiseAnalysis>                    m_noise;
            boost::optional<CPACSTrajectories>                     m_trajectories;
            boost::optional<CPACSWeightAndBalance>                 m_weightAndBalance;
            boost::optional<std::string>                           m_paxFlow;
            
        private:
            #ifdef HAVE_CPP11
            CPACSAircraftAnalyses(const CPACSAircraftAnalyses&) = delete;
            CPACSAircraftAnalyses& operator=(const CPACSAircraftAnalyses&) = delete;
            
            CPACSAircraftAnalyses(CPACSAircraftAnalyses&&) = delete;
            CPACSAircraftAnalyses& operator=(CPACSAircraftAnalyses&&) = delete;
            #else
            CPACSAircraftAnalyses(const CPACSAircraftAnalyses&);
            CPACSAircraftAnalyses& operator=(const CPACSAircraftAnalyses&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSAircraftAnalyses = generated::CPACSAircraftAnalyses;
    #else
    typedef generated::CPACSAircraftAnalyses CCPACSAircraftAnalyses;
    #endif
}
