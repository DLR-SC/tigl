// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <string>
#include <tixi.h>
#include "CPACSLandingGearExtensionFunctionStep_stepType.h"
#include "tigl_internal.h"

namespace tigl
{
class CTiglUIDObject;

namespace generated
{
    class CPACSLandingGearExtensionFunction;

    // This class is used in:
    // CPACSLandingGearExtensionFunction

    /// @brief Extension step
    /// 
    /// Describes a step with the extension path of the landing gear. Make sure to provide a least one step with stepType=extracted!
    /// 
    class CPACSLandingGearExtensionFunctionStep
    {
    public:
        TIGL_EXPORT CPACSLandingGearExtensionFunctionStep(CPACSLandingGearExtensionFunction* parent);

        TIGL_EXPORT virtual ~CPACSLandingGearExtensionFunctionStep();

        TIGL_EXPORT CPACSLandingGearExtensionFunction* GetParent();

        TIGL_EXPORT const CPACSLandingGearExtensionFunction* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const CPACSLandingGearExtensionFunctionStep_stepType& GetStepType() const;
        TIGL_EXPORT virtual void SetStepType(const CPACSLandingGearExtensionFunctionStep_stepType& value);

        TIGL_EXPORT virtual const double& GetControlParameter() const;
        TIGL_EXPORT virtual void SetControlParameter(const double& value);

        TIGL_EXPORT virtual const double& GetExtensionAngle() const;
        TIGL_EXPORT virtual void SetExtensionAngle(const double& value);

    protected:
        CPACSLandingGearExtensionFunction* m_parent;

        /// Step type (retracted or extracted)
        CPACSLandingGearExtensionFunctionStep_stepType m_stepType;

        /// Control parameter
        double                                         m_controlParameter;

        /// Extension angle of the main strut [deg]
        double                                         m_extensionAngle;

    private:
        CPACSLandingGearExtensionFunctionStep(const CPACSLandingGearExtensionFunctionStep&) = delete;
        CPACSLandingGearExtensionFunctionStep& operator=(const CPACSLandingGearExtensionFunctionStep&) = delete;

        CPACSLandingGearExtensionFunctionStep(CPACSLandingGearExtensionFunctionStep&&) = delete;
        CPACSLandingGearExtensionFunctionStep& operator=(CPACSLandingGearExtensionFunctionStep&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSLandingGearExtensionFunctionStep = generated::CPACSLandingGearExtensionFunctionStep;
using CCPACSLandingGearExtensionFunction = generated::CPACSLandingGearExtensionFunction;
} // namespace tigl
