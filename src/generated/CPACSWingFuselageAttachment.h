// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include "CPACSRibIdentification.h"
#include "CPACSRibIdentification.h"
#include "CPACSAttachmentPins.h"
#include "CPACSActuatorsFuselageWing.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSWingFuselageAttachments
        
        // generated from /xsd:schema/xsd:complexType[903]
        class CPACSWingFuselageAttachment
        {
        public:
            TIGL_EXPORT CPACSWingFuselageAttachment();
            TIGL_EXPORT virtual ~CPACSWingFuselageAttachment();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const CPACSRibIdentification& GetRib1() const;
            TIGL_EXPORT CPACSRibIdentification& GetRib1();
            
            TIGL_EXPORT bool HasRib2() const;
            TIGL_EXPORT const CPACSRibIdentification& GetRib2() const;
            TIGL_EXPORT CPACSRibIdentification& GetRib2();
            
            TIGL_EXPORT bool HasAttachmentPins() const;
            TIGL_EXPORT const CPACSAttachmentPins& GetAttachmentPins() const;
            TIGL_EXPORT CPACSAttachmentPins& GetAttachmentPins();
            
            TIGL_EXPORT bool HasActuators() const;
            TIGL_EXPORT const CPACSActuatorsFuselageWing& GetActuators() const;
            TIGL_EXPORT CPACSActuatorsFuselageWing& GetActuators();
            
        protected:
            CPACSRibIdentification                      m_rib1;
            boost::optional<CPACSRibIdentification>     m_rib2;
            boost::optional<CPACSAttachmentPins>        m_attachmentPins;
            boost::optional<CPACSActuatorsFuselageWing> m_actuators;
            
        private:
            #ifdef HAVE_CPP11
            CPACSWingFuselageAttachment(const CPACSWingFuselageAttachment&) = delete;
            CPACSWingFuselageAttachment& operator=(const CPACSWingFuselageAttachment&) = delete;
            
            CPACSWingFuselageAttachment(CPACSWingFuselageAttachment&&) = delete;
            CPACSWingFuselageAttachment& operator=(CPACSWingFuselageAttachment&&) = delete;
            #else
            CPACSWingFuselageAttachment(const CPACSWingFuselageAttachment&);
            CPACSWingFuselageAttachment& operator=(const CPACSWingFuselageAttachment&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSWingFuselageAttachment = generated::CPACSWingFuselageAttachment;
    #else
    typedef generated::CPACSWingFuselageAttachment CCPACSWingFuselageAttachment;
    #endif
}
