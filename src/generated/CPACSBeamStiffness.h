// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <string>
#include <tixi.h>
#include "CTiglUIDObject.h"
#include "tigl_internal.h"

namespace tigl
{
class CTiglUIDManager;

namespace generated
{
    class CPACSGlobalBeamProperties;

    // This class is used in:
    // CPACSGlobalBeamProperties

    // generated from /xsd:schema/xsd:complexType[80]
    /// @brief beamStiffnessType
    /// 
    /// globalBeamStiffnessType, containing the beam
    /// stiffnesses such as EA, EI
    /// 
    class CPACSBeamStiffness : public CTiglReqUIDObject
    {
    public:
        TIGL_EXPORT CPACSBeamStiffness(CPACSGlobalBeamProperties* parent, CTiglUIDManager* uidMgr);

        TIGL_EXPORT virtual ~CPACSBeamStiffness();

        TIGL_EXPORT CPACSGlobalBeamProperties* GetParent();

        TIGL_EXPORT const CPACSGlobalBeamProperties* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT CTiglUIDManager& GetUIDManager();
        TIGL_EXPORT const CTiglUIDManager& GetUIDManager() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const std::string& GetUID() const;
        TIGL_EXPORT virtual void SetUID(const std::string& value);

        TIGL_EXPORT virtual const double& GetEA() const;
        TIGL_EXPORT virtual void SetEA(const double& value);

        TIGL_EXPORT virtual const double& GetEIxx() const;
        TIGL_EXPORT virtual void SetEIxx(const double& value);

        TIGL_EXPORT virtual const double& GetEIyy() const;
        TIGL_EXPORT virtual void SetEIyy(const double& value);

        TIGL_EXPORT virtual const double& GetEIxy() const;
        TIGL_EXPORT virtual void SetEIxy(const double& value);

        TIGL_EXPORT virtual const double& GetGIt() const;
        TIGL_EXPORT virtual void SetGIt(const double& value);

        TIGL_EXPORT virtual const double& GetG() const;
        TIGL_EXPORT virtual void SetG(const double& value);

        TIGL_EXPORT virtual const double& GetIt() const;
        TIGL_EXPORT virtual void SetIt(const double& value);

    protected:
        CPACSGlobalBeamProperties* m_parent;

        CTiglUIDManager* m_uidMgr;

        std::string m_uID;
        double      m_EA;
        double      m_EIxx;
        double      m_EIyy;
        double      m_EIxy;
        double      m_GIt;
        double      m_G;
        double      m_It;

    private:
        CPACSBeamStiffness(const CPACSBeamStiffness&) = delete;
        CPACSBeamStiffness& operator=(const CPACSBeamStiffness&) = delete;

        CPACSBeamStiffness(CPACSBeamStiffness&&) = delete;
        CPACSBeamStiffness& operator=(CPACSBeamStiffness&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSBeamStiffness = generated::CPACSBeamStiffness;
using CCPACSGlobalBeamProperties = generated::CPACSGlobalBeamProperties;
} // namespace tigl
