// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "TixiHelper.h"
#include "CTiglLogging.h"
#include "CTiglError.h"
#include "CPACSSteffsTool.h"

namespace tigl
{
    namespace generated
    {
        CPACSSteffsTool::CPACSSteffsTool(){}
        CPACSSteffsTool::~CPACSSteffsTool() {}
        
        void CPACSSteffsTool::ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath)
        {
            // read element tool
            if (tixihelper::TixiCheckElement(tixiHandle, xpath + "/tool")) {
                m_tool.ReadCPACS(tixiHandle, xpath + "/tool");
            }
            else {
                LOG(ERROR) << "Required element tool is missing";
            }
            
            // read element sizingParameters
            if (tixihelper::TixiCheckElement(tixiHandle, xpath + "/sizingParameters")) {
                m_sizingParameters.ReadCPACS(tixiHandle, xpath + "/sizingParameters");
            }
            else {
                LOG(ERROR) << "Required element sizingParameters is missing";
            }
            
            // read element validationParameters
            if (tixihelper::TixiCheckElement(tixiHandle, xpath + "/validationParameters")) {
                m_validationParameters.ReadCPACS(tixiHandle, xpath + "/validationParameters");
            }
            else {
                LOG(ERROR) << "Required element validationParameters is missing";
            }
            
            // read element outputParameters
            if (tixihelper::TixiCheckElement(tixiHandle, xpath + "/outputParameters")) {
                m_outputParameters.ReadCPACS(tixiHandle, xpath + "/outputParameters");
            }
            else {
                LOG(ERROR) << "Required element outputParameters is missing";
            }
            
        }
        
        void CPACSSteffsTool::WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const
        {
            // write element tool
            tixihelper::TixiCreateElementIfNotExists(tixiHandle, xpath + "/tool");
            m_tool.WriteCPACS(tixiHandle, xpath + "/tool");
            
            // write element sizingParameters
            tixihelper::TixiCreateElementIfNotExists(tixiHandle, xpath + "/sizingParameters");
            m_sizingParameters.WriteCPACS(tixiHandle, xpath + "/sizingParameters");
            
            // write element validationParameters
            tixihelper::TixiCreateElementIfNotExists(tixiHandle, xpath + "/validationParameters");
            m_validationParameters.WriteCPACS(tixiHandle, xpath + "/validationParameters");
            
            // write element outputParameters
            tixihelper::TixiCreateElementIfNotExists(tixiHandle, xpath + "/outputParameters");
            m_outputParameters.WriteCPACS(tixiHandle, xpath + "/outputParameters");
            
        }
        
        const CPACSTool& CPACSSteffsTool::GetTool() const
        {
            return m_tool;
        }
        
        CPACSTool& CPACSSteffsTool::GetTool()
        {
            return m_tool;
        }
        
        const CPACSSteffsSizingParameters& CPACSSteffsTool::GetSizingParameters() const
        {
            return m_sizingParameters;
        }
        
        CPACSSteffsSizingParameters& CPACSSteffsTool::GetSizingParameters()
        {
            return m_sizingParameters;
        }
        
        const CPACSSteffsValidationParameters& CPACSSteffsTool::GetValidationParameters() const
        {
            return m_validationParameters;
        }
        
        CPACSSteffsValidationParameters& CPACSSteffsTool::GetValidationParameters()
        {
            return m_validationParameters;
        }
        
        const CPACSSteffsOutputParameters& CPACSSteffsTool::GetOutputParameters() const
        {
            return m_outputParameters;
        }
        
        CPACSSteffsOutputParameters& CPACSSteffsTool::GetOutputParameters()
        {
            return m_outputParameters;
        }
        
    }
}
