// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "TixiHelper.h"
#include "CTiglLogging.h"
#include "CTiglError.h"
#include "CPACSCrashAdditionalOutputDef.h"

namespace tigl
{
    namespace generated
    {
        CPACSCrashAdditionalOutputDef::CPACSCrashAdditionalOutputDef(){}
        CPACSCrashAdditionalOutputDef::~CPACSCrashAdditionalOutputDef() {}
        
        void CPACSCrashAdditionalOutputDef::ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath)
        {
            // read element crashOutAccCurves
            if (tixihelper::TixiCheckElement(tixiHandle, xpath + "/crashOutAccCurves")) {
                m_crashOutAccCurves = tixihelper::TixiGetElement<bool>(tixiHandle, xpath + "/crashOutAccCurves");
            }
            
            // read element crashOutVideo
            if (tixihelper::TixiCheckElement(tixiHandle, xpath + "/crashOutVideo")) {
                m_crashOutVideo = tixihelper::TixiGetElement<bool>(tixiHandle, xpath + "/crashOutVideo");
            }
            
        }
        
        void CPACSCrashAdditionalOutputDef::WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const
        {
            // write element crashOutAccCurves
            if (m_crashOutAccCurves) {
                tixihelper::TixiCreateElementIfNotExists(tixiHandle, xpath + "/crashOutAccCurves");
                tixihelper::TixiSaveElement(tixiHandle, xpath + "/crashOutAccCurves", *m_crashOutAccCurves);
            }
            
            // write element crashOutVideo
            if (m_crashOutVideo) {
                tixihelper::TixiCreateElementIfNotExists(tixiHandle, xpath + "/crashOutVideo");
                tixihelper::TixiSaveElement(tixiHandle, xpath + "/crashOutVideo", *m_crashOutVideo);
            }
            
        }
        
        bool CPACSCrashAdditionalOutputDef::HasCrashOutAccCurves() const
        {
            return static_cast<bool>(m_crashOutAccCurves);
        }
        
        const bool& CPACSCrashAdditionalOutputDef::GetCrashOutAccCurves() const
        {
            return *m_crashOutAccCurves;
        }
        
        void CPACSCrashAdditionalOutputDef::SetCrashOutAccCurves(const bool& value)
        {
            m_crashOutAccCurves = value;
        }
        
        bool CPACSCrashAdditionalOutputDef::HasCrashOutVideo() const
        {
            return static_cast<bool>(m_crashOutVideo);
        }
        
        const bool& CPACSCrashAdditionalOutputDef::GetCrashOutVideo() const
        {
            return *m_crashOutVideo;
        }
        
        void CPACSCrashAdditionalOutputDef::SetCrashOutVideo(const bool& value)
        {
            m_crashOutVideo = value;
        }
        
    }
}
