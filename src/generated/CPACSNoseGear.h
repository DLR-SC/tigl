// Copyright (c) 2016 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <tixi.h>
#include <string>
#include <boost/optional.hpp>
#include "tigl_internal.h"
#include <TiglSymmetryAxis.h>
#include <CCPACSTransformation.h>
#include "CPACSNoseGearGlobal.h"
#include "CPACSGearComponents.h"

namespace tigl
{
    namespace generated
    {
        // This class is used in:
        // CPACSNoseGears
        
        // generated from /xsd:schema/xsd:complexType[665]
        class CPACSNoseGear
        {
        public:
            TIGL_EXPORT CPACSNoseGear();
            TIGL_EXPORT virtual ~CPACSNoseGear();
            
            TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
            TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;
            
            TIGL_EXPORT const std::string& GetUID() const;
            TIGL_EXPORT void SetUID(const std::string& value);
            
            TIGL_EXPORT bool HasSymmetry() const;
            TIGL_EXPORT const TiglSymmetryAxis& GetSymmetry() const;
            TIGL_EXPORT void SetSymmetry(const TiglSymmetryAxis& value);
            
            TIGL_EXPORT bool HasName() const;
            TIGL_EXPORT const std::string& GetName() const;
            TIGL_EXPORT void SetName(const std::string& value);
            
            TIGL_EXPORT bool HasDescription() const;
            TIGL_EXPORT const std::string& GetDescription() const;
            TIGL_EXPORT void SetDescription(const std::string& value);
            
            TIGL_EXPORT bool HasParentUID() const;
            TIGL_EXPORT const std::string& GetParentUID() const;
            TIGL_EXPORT void SetParentUID(const std::string& value);
            
            TIGL_EXPORT bool HasFuselageAttachment() const;
            TIGL_EXPORT const CCPACSTransformation& GetFuselageAttachment() const;
            TIGL_EXPORT CCPACSTransformation& GetFuselageAttachment();
            
            TIGL_EXPORT bool HasGlobal() const;
            TIGL_EXPORT const CPACSNoseGearGlobal& GetGlobal() const;
            TIGL_EXPORT CPACSNoseGearGlobal& GetGlobal();
            
            TIGL_EXPORT bool HasComponents() const;
            TIGL_EXPORT const CPACSGearComponents& GetComponents() const;
            TIGL_EXPORT CPACSGearComponents& GetComponents();
            
        protected:
            std::string                           m_uID;
            boost::optional<TiglSymmetryAxis>     m_symmetry;
            boost::optional<std::string>          m_name;
            boost::optional<std::string>          m_description;
            boost::optional<std::string>          m_parentUID;
            boost::optional<CCPACSTransformation> m_fuselageAttachment;
            boost::optional<CPACSNoseGearGlobal>  m_global;
            boost::optional<CPACSGearComponents>  m_components;
            
        private:
            #ifdef HAVE_CPP11
            CPACSNoseGear(const CPACSNoseGear&) = delete;
            CPACSNoseGear& operator=(const CPACSNoseGear&) = delete;
            
            CPACSNoseGear(CPACSNoseGear&&) = delete;
            CPACSNoseGear& operator=(CPACSNoseGear&&) = delete;
            #else
            CPACSNoseGear(const CPACSNoseGear&);
            CPACSNoseGear& operator=(const CPACSNoseGear&);
            #endif
        };
    }
    
    // This type is not customized, create alias in tigl namespace
    #ifdef CPP11
    using CCPACSNoseGear = generated::CPACSNoseGear;
    #else
    typedef generated::CPACSNoseGear CCPACSNoseGear;
    #endif
}
