// Copyright (c) 2020 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <boost/optional.hpp>
#include <boost/utility/in_place_factory.hpp>
#include <string>
#include <tixi.h>
#include "tigl_internal.h"

namespace tigl
{
class CTiglUIDObject;

namespace generated
{
    class CPACSLandingGearStrutAttachment;

    // This class is used in:
    // CPACSLandingGearStrutAttachment

    /// @brief Position of the landing gear on a wing
    /// 
    /// Definition of the position of the landing gear
    /// (intersection point of main strut and pintle sturt) on a wing,
    /// using relative componentSegment coordinates
    /// 
    class CPACSWingAttachmentPositioning
    {
    public:
        TIGL_EXPORT CPACSWingAttachmentPositioning(CPACSLandingGearStrutAttachment* parent);

        TIGL_EXPORT virtual ~CPACSWingAttachmentPositioning();

        TIGL_EXPORT CPACSLandingGearStrutAttachment* GetParent();

        TIGL_EXPORT const CPACSLandingGearStrutAttachment* GetParent() const;

        TIGL_EXPORT virtual CTiglUIDObject* GetNextUIDParent();
        TIGL_EXPORT virtual const CTiglUIDObject* GetNextUIDParent() const;

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const double& GetRelHeight() const;
        TIGL_EXPORT virtual void SetRelHeight(const double& value);

        TIGL_EXPORT virtual const boost::optional<double>& GetEta() const;
        TIGL_EXPORT virtual void SetEta(const boost::optional<double>& value);

        TIGL_EXPORT virtual const boost::optional<double>& GetXsi() const;
        TIGL_EXPORT virtual void SetXsi(const boost::optional<double>& value);

    protected:
        CPACSLandingGearStrutAttachment* m_parent;

        /// Relative height of spar or rib at which landing gear is attached.
        double                  m_relHeight;

        /// Relative spanwise position (eta) of spar at which landing gear is attached.
        boost::optional<double> m_eta;

        /// Relative chordwise position (xsi) of the rib at which landing gear is attached.
        boost::optional<double> m_xsi;

    private:
        CPACSWingAttachmentPositioning(const CPACSWingAttachmentPositioning&) = delete;
        CPACSWingAttachmentPositioning& operator=(const CPACSWingAttachmentPositioning&) = delete;

        CPACSWingAttachmentPositioning(CPACSWingAttachmentPositioning&&) = delete;
        CPACSWingAttachmentPositioning& operator=(CPACSWingAttachmentPositioning&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSWingAttachmentPositioning = generated::CPACSWingAttachmentPositioning;
using CCPACSLandingGearStrutAttachment = generated::CPACSLandingGearStrutAttachment;
} // namespace tigl
