name: Build and publish conda package

on:
  release:
    types: [created]


jobs:
  
  conda-bld:
    
    strategy:
      matrix:
        os: [ubuntu-latest,macos-latest,windows-latest]
      fail-fast: false
    
    runs-on: ${{ matrix.os }}    

    steps:

    - name: Setup conda
      uses: goanpeca/setup-miniconda@v1.0.2
      with:
        auto-update-conda: true
        auto-activate-base: true
        activate-environment: ''
      
    - name: install conda-build and anaconda-client
      run: |
        conda install conda-build anaconda-client
        conda info -a
        conda list -n base
        
    - name: Clone tigl-conda
      run: git clone https://github.com/DLR-SC/tigl-conda.git
        
    - name: Build TiGL (windows)
      if: contains(matrix.os, 'windows')
      shell: cmd /C call {0}
      run: conda-build tigl-conda/tigl3 -c dlr-sc
      
    - name: Build TiGL (macos, ubuntu)
      if: contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu')
      shell: bash -l {0}
      run: conda-build tigl-conda/tigl3 -c dlr-sc
    
    - name: Copy builds (ubuntu)
      run: |
        mkdir -p build
        cp /usr/share/miniconda/conda-bld/linux-64/*.tar.bz2 build/
      if: contains(matrix.os, 'ubuntu')
      
    - name: Copy builds (macos)
      run: |
        mkdir -p build
        cp /usr/local/miniconda/conda-bld/osx-64/*.tar.bz2 build/
      if: contains(matrix.os, 'macos')
    
    - name: Copy builds (windows)
      run: |
        if not exist "build" mkdir build
        Copy C:\Miniconda\conda-bld\win-64\*.tar.bz2 build
      shell: cmd
      if: contains(matrix.os, 'windows')
      
#    - name: Upload packages as artifact
#      uses: actions/upload-artifact@v1.0.0
#      with:
#        name: conda-package
#        path: build
        
    - name: Publish to anaconda
      run: |
        anaconda login --username joergbrech --password ${{ secrets.ANACONDA_PWD }}
        anaconda upload build/*
