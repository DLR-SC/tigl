name: "MacOS Deployment"
description: "Create Installer, Windows Package and Documentation"
inputs:
  build-artifact:
    description: "Name of the build artifact that contains the unit test binary."
    required: true
  documentation:
    description: "Build the documentation and store as artifact (true or false)"
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - name: Download built test directory
      uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.build-artifact }}
    - name: extract build archive
      shell: bash
      run: |
        tar -xzf build.tar.gz
    - name: Install dependencies
      uses: nick-invision/retry@v1
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: |
        curl --retry 3 -o sshpass-macOS.tar.gz -L https://sourceforge.net/projects/tigl/files/Thirdparty/sshpass-macOS.tar.gz
        curl --retry 3 -o doxygen-macOS.tar.gz -L https://sourceforge.net/projects/tigl/files/Thirdparty/doxygen-macOS.tar.gz
        curl --retry 3 -o matlab-libs-macos.tar.gz -L https://sourceforge.net/projects/tigl/files/Thirdparty/matlab-libs-macos.tar.gz
        curl --retry 3 -o occt.7.4.0.macos_static.tar.gz -L https://sourceforge.net/projects/tigl/files/Thirdparty/occt.7.4.0.macos_static.tar.gz
        curl --retry 3 -O -L https://github.com/DLR-SC/tixi/releases/download/v3.1.1/TIXI-3.1.1-Darwin.tar.gz
        tar xf sshpass-macOS.tar.gz -C /tmp
        tar xf doxygen-macOS.tar.gz -C /tmp
        tar xf matlab-libs-macos.tar.gz -C /tmp
        tar xf occt.7.4.0.macos_static.tar.gz
        tar xf TIXI-3.1.1-Darwin.tar.gz
        echo "/tmp" >> $GITHUB_PATH
        echo "/tmp/doxygen" >> $GITHUB_PATH
        echo "DYLD_LIBRARY_PATH=${{ github.workspace }}/TIXI-3.1.1-Darwin/lib" >> $GITHUB_ENV
        echo "CMAKE_PREFIX_PATH=${{ github.workspace }}/TIXI-3.1.1-Darwin:${{ github.workspace }}/occt.7.4.0.macos_static:/usr/local/opt/qt@5/" >> $GITHUB_ENV
        echo "CXXFLAGS=-fvisibility-inlines-hidden" >> $GITHUB_ENV
        brew install qt@5 ninja
    - name: Create package
      shell: bash
      run: |
        cd build
        cmake --build . --target doc/fast
        cmake --build . --target package/fast
    - name: Upload package as artifact
      uses: actions/upload-artifact@v2
      with:
       name: macos-package
       path: build/*.dmg
    - name: Create documentation
      if: ${{ inputs.documentation }}
      shell: bash
      run: |
        cd build
        cmake --build . --target doc/fast
    - name: Upload documentation as artifact
      if: ${{ inputs.documentation }}
      uses: actions/upload-artifact@v2
      with:
       name: html-documentation
       path: build/doc/html/*
